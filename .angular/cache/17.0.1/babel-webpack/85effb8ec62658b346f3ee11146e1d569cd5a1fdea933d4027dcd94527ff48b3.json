{"ast":null,"code":"import { inject } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FuseConfirmationDialogComponent } from '@fuse/services/confirmation/dialog/dialog.component';\nimport { merge } from 'lodash-es';\nimport * as i0 from \"@angular/core\";\nexport class FuseConfirmationService {\n  /**\n   * Constructor\n   */\n  constructor() {\n    this._matDialog = inject(MatDialog);\n    this._defaultConfig = {\n      title: 'Confirm action',\n      message: 'Are you sure you want to confirm this action?',\n      icon: {\n        show: true,\n        name: 'heroicons_outline:exclamation-triangle',\n        color: 'warn'\n      },\n      actions: {\n        confirm: {\n          show: true,\n          label: 'Confirm',\n          color: 'warn'\n        },\n        cancel: {\n          show: true,\n          label: 'Cancel'\n        }\n      },\n      dismissible: false\n    };\n  }\n  // -----------------------------------------------------------------------------------------------------\n  // @ Public methods\n  // -----------------------------------------------------------------------------------------------------\n  open(config = {}) {\n    // Merge the user config with the default config\n    const userConfig = merge({}, this._defaultConfig, config);\n    // Open the dialog\n    return this._matDialog.open(FuseConfirmationDialogComponent, {\n      autoFocus: false,\n      disableClose: !userConfig.dismissible,\n      data: userConfig,\n      panelClass: 'fuse-confirmation-dialog-panel'\n    });\n  }\n  static #_ = this.ɵfac = function FuseConfirmationService_Factory(t) {\n    return new (t || FuseConfirmationService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: FuseConfirmationService,\n    factory: FuseConfirmationService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["inject","MatDialog","FuseConfirmationDialogComponent","merge","FuseConfirmationService","constructor","_matDialog","_defaultConfig","title","message","icon","show","name","color","actions","confirm","label","cancel","dismissible","open","config","userConfig","autoFocus","disableClose","data","panelClass","_","_2","factory","ɵfac","providedIn"],"sources":["/Users/tusharphalke/Documents/Freelancing_Work/rrms_frontend/src/@fuse/services/confirmation/confirmation.service.ts"],"sourcesContent":["import { inject, Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { FuseConfirmationConfig } from '@fuse/services/confirmation/confirmation.types';\nimport { FuseConfirmationDialogComponent } from '@fuse/services/confirmation/dialog/dialog.component';\nimport { merge } from 'lodash-es';\n\n@Injectable({providedIn: 'root'})\nexport class FuseConfirmationService\n{\n    private _matDialog: MatDialog = inject(MatDialog);\n    private _defaultConfig: FuseConfirmationConfig = {\n        title      : 'Confirm action',\n        message    : 'Are you sure you want to confirm this action?',\n        icon       : {\n            show : true,\n            name : 'heroicons_outline:exclamation-triangle',\n            color: 'warn',\n        },\n        actions    : {\n            confirm: {\n                show : true,\n                label: 'Confirm',\n                color: 'warn',\n            },\n            cancel : {\n                show : true,\n                label: 'Cancel',\n            },\n        },\n        dismissible: false,\n    };\n\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    open(config: FuseConfirmationConfig = {}): MatDialogRef<FuseConfirmationDialogComponent>\n    {\n        // Merge the user config with the default config\n        const userConfig = merge({}, this._defaultConfig, config);\n\n        // Open the dialog\n        return this._matDialog.open(FuseConfirmationDialogComponent, {\n            autoFocus   : false,\n            disableClose: !userConfig.dismissible,\n            data        : userConfig,\n            panelClass  : 'fuse-confirmation-dialog-panel',\n        });\n    }\n}\n"],"mappings":"AAAA,SAASA,MAAM,QAAoB,eAAe;AAClD,SAASC,SAAS,QAAsB,0BAA0B;AAElE,SAASC,+BAA+B,QAAQ,qDAAqD;AACrG,SAASC,KAAK,QAAQ,WAAW;;AAGjC,OAAM,MAAOC,uBAAuB;EAyBhC;;;EAGAC,YAAA;IA1BQ,KAAAC,UAAU,GAAcN,MAAM,CAACC,SAAS,CAAC;IACzC,KAAAM,cAAc,GAA2B;MAC7CC,KAAK,EAAQ,gBAAgB;MAC7BC,OAAO,EAAM,+CAA+C;MAC5DC,IAAI,EAAS;QACTC,IAAI,EAAG,IAAI;QACXC,IAAI,EAAG,wCAAwC;QAC/CC,KAAK,EAAE;OACV;MACDC,OAAO,EAAM;QACTC,OAAO,EAAE;UACLJ,IAAI,EAAG,IAAI;UACXK,KAAK,EAAE,SAAS;UAChBH,KAAK,EAAE;SACV;QACDI,MAAM,EAAG;UACLN,IAAI,EAAG,IAAI;UACXK,KAAK,EAAE;;OAEd;MACDE,WAAW,EAAE;KAChB;EAOD;EAEA;EACA;EACA;EAEAC,IAAIA,CAACC,MAAA,GAAiC,EAAE;IAEpC;IACA,MAAMC,UAAU,GAAGlB,KAAK,CAAC,EAAE,EAAE,IAAI,CAACI,cAAc,EAAEa,MAAM,CAAC;IAEzD;IACA,OAAO,IAAI,CAACd,UAAU,CAACa,IAAI,CAACjB,+BAA+B,EAAE;MACzDoB,SAAS,EAAK,KAAK;MACnBC,YAAY,EAAE,CAACF,UAAU,CAACH,WAAW;MACrCM,IAAI,EAAUH,UAAU;MACxBI,UAAU,EAAI;KACjB,CAAC;EACN;EAAC,QAAAC,CAAA,G;qBAhDQtB,uBAAuB;EAAA;EAAA,QAAAuB,EAAA,G;WAAvBvB,uBAAuB;IAAAwB,OAAA,EAAvBxB,uBAAuB,CAAAyB,IAAA;IAAAC,UAAA,EADX;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}