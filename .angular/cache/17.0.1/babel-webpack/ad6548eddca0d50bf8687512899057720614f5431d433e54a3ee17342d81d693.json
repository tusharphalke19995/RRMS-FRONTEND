{"ast":null,"code":"import { NgIf } from '@angular/common';\nimport { RouterOutlet } from '@angular/router';\nimport { FuseLoadingBarComponent } from '@fuse/components/loading-bar';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nfunction EmptyLayoutComponent_router_outlet_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"router-outlet\");\n  }\n}\nexport class EmptyLayoutComponent {\n  /**\n   * Constructor\n   */\n  constructor() {\n    this._unsubscribeAll = new Subject();\n  }\n  // -----------------------------------------------------------------------------------------------------\n  // @ Lifecycle hooks\n  // -----------------------------------------------------------------------------------------------------\n  /**\n   * On destroy\n   */\n  ngOnDestroy() {\n    // Unsubscribe from all subscriptions\n    this._unsubscribeAll.next(null);\n    this._unsubscribeAll.complete();\n  }\n  static #_ = this.ɵfac = function EmptyLayoutComponent_Factory(t) {\n    return new (t || EmptyLayoutComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EmptyLayoutComponent,\n    selectors: [[\"empty-layout\"]],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 4,\n    vars: 1,\n    consts: [[1, \"flex\", \"flex-col\", \"flex-auto\", \"w-full\"], [1, \"flex\", \"flex-col\", \"flex-auto\"], [4, \"ngIf\"]],\n    template: function EmptyLayoutComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"fuse-loading-bar\");\n        i0.ɵɵelementStart(1, \"div\", 0)(2, \"div\", 1);\n        i0.ɵɵtemplate(3, EmptyLayoutComponent_router_outlet_3_Template, 1, 0, \"router-outlet\", 2);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", true);\n      }\n    },\n    dependencies: [FuseLoadingBarComponent, NgIf, RouterOutlet],\n    encapsulation: 2\n  });\n}","map":{"version":3,"names":["NgIf","RouterOutlet","FuseLoadingBarComponent","Subject","i0","ɵɵelement","EmptyLayoutComponent","constructor","_unsubscribeAll","ngOnDestroy","next","complete","_","_2","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","EmptyLayoutComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtemplate","EmptyLayoutComponent_router_outlet_3_Template","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","encapsulation"],"sources":["/Users/tusharphalke/Documents/Freelancing_Work/rrms_frontend/src/app/layout/layouts/empty/empty.component.ts","/Users/tusharphalke/Documents/Freelancing_Work/rrms_frontend/src/app/layout/layouts/empty/empty.component.html"],"sourcesContent":["import { NgIf } from '@angular/common';\nimport { Component, OnDestroy, ViewEncapsulation } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { FuseLoadingBarComponent } from '@fuse/components/loading-bar';\nimport { Subject } from 'rxjs';\n\n@Component({\n    selector     : 'empty-layout',\n    templateUrl  : './empty.component.html',\n    encapsulation: ViewEncapsulation.None,\n    standalone   : true,\n    imports      : [FuseLoadingBarComponent, NgIf, RouterOutlet],\n})\nexport class EmptyLayoutComponent implements OnDestroy\n{\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\n\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next(null);\n        this._unsubscribeAll.complete();\n    }\n}\n","<!-- Loading bar -->\n<fuse-loading-bar></fuse-loading-bar>\n\n<!-- Wrapper -->\n<div class=\"flex flex-col flex-auto w-full\">\n\n    <!-- Content -->\n    <div class=\"flex flex-col flex-auto\">\n        <!-- *ngIf=\"true\" hack is required here for router-outlet to work correctly.\n             Otherwise, layout changes won't be registered and the view won't be updated! -->\n        <router-outlet *ngIf=\"true\"></router-outlet>\n    </div>\n\n</div>\n"],"mappings":"AAAA,SAASA,IAAI,QAAQ,iBAAiB;AAEtC,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,uBAAuB,QAAQ,8BAA8B;AACtE,SAASC,OAAO,QAAQ,MAAM;;;;ICMtBC,EAAA,CAAAC,SAAA,oBAA4C;;;ADGpD,OAAM,MAAOC,oBAAoB;EAI7B;;;EAGAC,YAAA;IALQ,KAAAC,eAAe,GAAiB,IAAIL,OAAO,EAAO;EAO1D;EAEA;EACA;EACA;EAEA;;;EAGAM,WAAWA,CAAA;IAEP;IACA,IAAI,CAACD,eAAe,CAACE,IAAI,CAAC,IAAI,CAAC;IAC/B,IAAI,CAACF,eAAe,CAACG,QAAQ,EAAE;EACnC;EAAC,QAAAC,CAAA,G;qBAvBQN,oBAAoB;EAAA;EAAA,QAAAO,EAAA,G;UAApBP,oBAAoB;IAAAQ,SAAA;IAAAC,UAAA;IAAAC,QAAA,GAAAZ,EAAA,CAAAa,mBAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCZjCnB,EAAA,CAAAC,SAAA,uBAAqC;QAGrCD,EAAA,CAAAqB,cAAA,aAA4C;QAMpCrB,EAAA,CAAAsB,UAAA,IAAAC,6CAAA,2BAA4C;QAChDvB,EAAA,CAAAwB,YAAA,EAAM;;;QADcxB,EAAA,CAAAyB,SAAA,GAAU;QAAVzB,EAAA,CAAA0B,UAAA,cAAU;;;mBDCd5B,uBAAuB,EAAEF,IAAI,EAAEC,YAAY;IAAA8B,aAAA;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}