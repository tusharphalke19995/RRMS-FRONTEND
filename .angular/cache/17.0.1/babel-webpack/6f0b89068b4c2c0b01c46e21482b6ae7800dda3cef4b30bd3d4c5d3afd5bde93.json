{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class FuseLoadingService {\n  /**\n   * Constructor\n   */\n  constructor(_httpClient) {\n    this._httpClient = _httpClient;\n    this._auto$ = new BehaviorSubject(true);\n    this._mode$ = new BehaviorSubject('indeterminate');\n    this._progress$ = new BehaviorSubject(0);\n    this._show$ = new BehaviorSubject(false);\n    this._urlMap = new Map();\n  }\n  // -----------------------------------------------------------------------------------------------------\n  // @ Accessors\n  // -----------------------------------------------------------------------------------------------------\n  /**\n   * Getter for auto mode\n   */\n  get auto$() {\n    return this._auto$.asObservable();\n  }\n  /**\n   * Getter for mode\n   */\n  get mode$() {\n    return this._mode$.asObservable();\n  }\n  /**\n   * Getter for progress\n   */\n  get progress$() {\n    return this._progress$.asObservable();\n  }\n  /**\n   * Getter for show\n   */\n  get show$() {\n    return this._show$.asObservable();\n  }\n  // -----------------------------------------------------------------------------------------------------\n  // @ Public methods\n  // -----------------------------------------------------------------------------------------------------\n  /**\n   * Show the loading bar\n   */\n  show() {\n    this._show$.next(true);\n  }\n  /**\n   * Hide the loading bar\n   */\n  hide() {\n    this._show$.next(false);\n  }\n  /**\n   * Set the auto mode\n   *\n   * @param value\n   */\n  setAutoMode(value) {\n    this._auto$.next(value);\n  }\n  /**\n   * Set the mode\n   *\n   * @param value\n   */\n  setMode(value) {\n    this._mode$.next(value);\n  }\n  /**\n   * Set the progress of the bar manually\n   *\n   * @param value\n   */\n  setProgress(value) {\n    if (value < 0 || value > 100) {\n      console.error('Progress value must be between 0 and 100!');\n      return;\n    }\n    this._progress$.next(value);\n  }\n  /**\n   * Sets the loading status on the given url\n   *\n   * @param status\n   * @param url\n   */\n  _setLoadingStatus(status, url) {\n    // Return if the url was not provided\n    if (!url) {\n      console.error('The request URL must be provided!');\n      return;\n    }\n    if (status === true) {\n      this._urlMap.set(url, status);\n      this._show$.next(true);\n    } else if (status === false && this._urlMap.has(url)) {\n      this._urlMap.delete(url);\n    }\n    // Only set the status to 'false' if all outgoing requests are completed\n    if (this._urlMap.size === 0) {\n      this._show$.next(false);\n    }\n  }\n  static #_ = this.ɵfac = function FuseLoadingService_Factory(t) {\n    return new (t || FuseLoadingService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: FuseLoadingService,\n    factory: FuseLoadingService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["BehaviorSubject","FuseLoadingService","constructor","_httpClient","_auto$","_mode$","_progress$","_show$","_urlMap","Map","auto$","asObservable","mode$","progress$","show$","show","next","hide","setAutoMode","value","setMode","setProgress","console","error","_setLoadingStatus","status","url","set","has","delete","size","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/Users/tusharphalke/Documents/Freelancing_Work/rrms_frontend/src/@fuse/services/loading/loading.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({providedIn: 'root'})\nexport class FuseLoadingService\n{\n    private _auto$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(true);\n    private _mode$: BehaviorSubject<'determinate' | 'indeterminate'> = new BehaviorSubject<'determinate' | 'indeterminate'>('indeterminate');\n    private _progress$: BehaviorSubject<number | null> = new BehaviorSubject<number | null>(0);\n    private _show$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n    private _urlMap: Map<string, boolean> = new Map<string, boolean>();\n\n    /**\n     * Constructor\n     */\n    constructor(private _httpClient: HttpClient)\n    {\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Accessors\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Getter for auto mode\n     */\n    get auto$(): Observable<boolean>\n    {\n        return this._auto$.asObservable();\n    }\n\n    /**\n     * Getter for mode\n     */\n    get mode$(): Observable<'determinate' | 'indeterminate'>\n    {\n        return this._mode$.asObservable();\n    }\n\n    /**\n     * Getter for progress\n     */\n    get progress$(): Observable<number>\n    {\n        return this._progress$.asObservable();\n    }\n\n    /**\n     * Getter for show\n     */\n    get show$(): Observable<boolean>\n    {\n        return this._show$.asObservable();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Show the loading bar\n     */\n    show(): void\n    {\n        this._show$.next(true);\n    }\n\n    /**\n     * Hide the loading bar\n     */\n    hide(): void\n    {\n        this._show$.next(false);\n    }\n\n    /**\n     * Set the auto mode\n     *\n     * @param value\n     */\n    setAutoMode(value: boolean): void\n    {\n        this._auto$.next(value);\n    }\n\n    /**\n     * Set the mode\n     *\n     * @param value\n     */\n    setMode(value: 'determinate' | 'indeterminate'): void\n    {\n        this._mode$.next(value);\n    }\n\n    /**\n     * Set the progress of the bar manually\n     *\n     * @param value\n     */\n    setProgress(value: number): void\n    {\n        if ( value < 0 || value > 100 )\n        {\n            console.error('Progress value must be between 0 and 100!');\n            return;\n        }\n\n        this._progress$.next(value);\n    }\n\n    /**\n     * Sets the loading status on the given url\n     *\n     * @param status\n     * @param url\n     */\n    _setLoadingStatus(status: boolean, url: string): void\n    {\n        // Return if the url was not provided\n        if ( !url )\n        {\n            console.error('The request URL must be provided!');\n            return;\n        }\n\n        if ( status === true )\n        {\n            this._urlMap.set(url, status);\n            this._show$.next(true);\n        }\n        else if ( status === false && this._urlMap.has(url) )\n        {\n            this._urlMap.delete(url);\n        }\n\n        // Only set the status to 'false' if all outgoing requests are completed\n        if ( this._urlMap.size === 0 )\n        {\n            this._show$.next(false);\n        }\n    }\n}\n"],"mappings":"AAEA,SAASA,eAAe,QAAoB,MAAM;;;AAGlD,OAAM,MAAOC,kBAAkB;EAQ3B;;;EAGAC,YAAoBC,WAAuB;IAAvB,KAAAA,WAAW,GAAXA,WAAW;IATvB,KAAAC,MAAM,GAA6B,IAAIJ,eAAe,CAAU,IAAI,CAAC;IACrE,KAAAK,MAAM,GAAqD,IAAIL,eAAe,CAAkC,eAAe,CAAC;IAChI,KAAAM,UAAU,GAAmC,IAAIN,eAAe,CAAgB,CAAC,CAAC;IAClF,KAAAO,MAAM,GAA6B,IAAIP,eAAe,CAAU,KAAK,CAAC;IACtE,KAAAQ,OAAO,GAAyB,IAAIC,GAAG,EAAmB;EAOlE;EAEA;EACA;EACA;EAEA;;;EAGA,IAAIC,KAAKA,CAAA;IAEL,OAAO,IAAI,CAACN,MAAM,CAACO,YAAY,EAAE;EACrC;EAEA;;;EAGA,IAAIC,KAAKA,CAAA;IAEL,OAAO,IAAI,CAACP,MAAM,CAACM,YAAY,EAAE;EACrC;EAEA;;;EAGA,IAAIE,SAASA,CAAA;IAET,OAAO,IAAI,CAACP,UAAU,CAACK,YAAY,EAAE;EACzC;EAEA;;;EAGA,IAAIG,KAAKA,CAAA;IAEL,OAAO,IAAI,CAACP,MAAM,CAACI,YAAY,EAAE;EACrC;EAEA;EACA;EACA;EAEA;;;EAGAI,IAAIA,CAAA;IAEA,IAAI,CAACR,MAAM,CAACS,IAAI,CAAC,IAAI,CAAC;EAC1B;EAEA;;;EAGAC,IAAIA,CAAA;IAEA,IAAI,CAACV,MAAM,CAACS,IAAI,CAAC,KAAK,CAAC;EAC3B;EAEA;;;;;EAKAE,WAAWA,CAACC,KAAc;IAEtB,IAAI,CAACf,MAAM,CAACY,IAAI,CAACG,KAAK,CAAC;EAC3B;EAEA;;;;;EAKAC,OAAOA,CAACD,KAAsC;IAE1C,IAAI,CAACd,MAAM,CAACW,IAAI,CAACG,KAAK,CAAC;EAC3B;EAEA;;;;;EAKAE,WAAWA,CAACF,KAAa;IAErB,IAAKA,KAAK,GAAG,CAAC,IAAIA,KAAK,GAAG,GAAG,EAC7B;MACIG,OAAO,CAACC,KAAK,CAAC,2CAA2C,CAAC;MAC1D;;IAGJ,IAAI,CAACjB,UAAU,CAACU,IAAI,CAACG,KAAK,CAAC;EAC/B;EAEA;;;;;;EAMAK,iBAAiBA,CAACC,MAAe,EAAEC,GAAW;IAE1C;IACA,IAAK,CAACA,GAAG,EACT;MACIJ,OAAO,CAACC,KAAK,CAAC,mCAAmC,CAAC;MAClD;;IAGJ,IAAKE,MAAM,KAAK,IAAI,EACpB;MACI,IAAI,CAACjB,OAAO,CAACmB,GAAG,CAACD,GAAG,EAAED,MAAM,CAAC;MAC7B,IAAI,CAAClB,MAAM,CAACS,IAAI,CAAC,IAAI,CAAC;KACzB,MACI,IAAKS,MAAM,KAAK,KAAK,IAAI,IAAI,CAACjB,OAAO,CAACoB,GAAG,CAACF,GAAG,CAAC,EACnD;MACI,IAAI,CAAClB,OAAO,CAACqB,MAAM,CAACH,GAAG,CAAC;;IAG5B;IACA,IAAK,IAAI,CAAClB,OAAO,CAACsB,IAAI,KAAK,CAAC,EAC5B;MACI,IAAI,CAACvB,MAAM,CAACS,IAAI,CAAC,KAAK,CAAC;;EAE/B;EAAC,QAAAe,CAAA,G;qBAzIQ9B,kBAAkB,EAAA+B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAlBnC,kBAAkB;IAAAoC,OAAA,EAAlBpC,kBAAkB,CAAAqC,IAAA;IAAAC,UAAA,EADN;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}