{"ast":null,"code":"import { inject } from '@angular/core';\nimport { NavigationService } from 'app/core/navigation/navigation.service';\nimport { MessagesService } from 'app/layout/common/messages/messages.service';\nimport { NotificationsService } from 'app/layout/common/notifications/notifications.service';\nimport { QuickChatService } from 'app/layout/common/quick-chat/quick-chat.service';\nimport { ShortcutsService } from 'app/layout/common/shortcuts/shortcuts.service';\nimport { forkJoin } from 'rxjs';\nexport const initialDataResolver = () => {\n  const messagesService = inject(MessagesService);\n  const navigationService = inject(NavigationService);\n  const notificationsService = inject(NotificationsService);\n  const quickChatService = inject(QuickChatService);\n  const shortcutsService = inject(ShortcutsService);\n  // Fork join multiple API endpoint calls to wait all of them to finish\n  return forkJoin([navigationService.get(), messagesService.getAll(), notificationsService.getAll(), quickChatService.getChats(), shortcutsService.getAll()]);\n};","map":{"version":3,"names":["inject","NavigationService","MessagesService","NotificationsService","QuickChatService","ShortcutsService","forkJoin","initialDataResolver","messagesService","navigationService","notificationsService","quickChatService","shortcutsService","get","getAll","getChats"],"sources":["/Users/tusharphalke/Documents/Freelancing_Work/rrms_frontend/src/app/app.resolvers.ts"],"sourcesContent":["import { inject } from '@angular/core';\nimport { NavigationService } from 'app/core/navigation/navigation.service';\nimport { MessagesService } from 'app/layout/common/messages/messages.service';\nimport { NotificationsService } from 'app/layout/common/notifications/notifications.service';\nimport { QuickChatService } from 'app/layout/common/quick-chat/quick-chat.service';\nimport { ShortcutsService } from 'app/layout/common/shortcuts/shortcuts.service';\nimport { forkJoin } from 'rxjs';\n\nexport const initialDataResolver = () =>\n{\n    const messagesService = inject(MessagesService);\n    const navigationService = inject(NavigationService);\n    const notificationsService = inject(NotificationsService);\n    const quickChatService = inject(QuickChatService);\n    const shortcutsService = inject(ShortcutsService);\n\n    // Fork join multiple API endpoint calls to wait all of them to finish\n    return forkJoin([\n        navigationService.get(),\n        messagesService.getAll(),\n        notificationsService.getAll(),\n        quickChatService.getChats(),\n        shortcutsService.getAll(),\n    ]);\n};\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,eAAe;AACtC,SAASC,iBAAiB,QAAQ,wCAAwC;AAC1E,SAASC,eAAe,QAAQ,6CAA6C;AAC7E,SAASC,oBAAoB,QAAQ,uDAAuD;AAC5F,SAASC,gBAAgB,QAAQ,iDAAiD;AAClF,SAASC,gBAAgB,QAAQ,+CAA+C;AAChF,SAASC,QAAQ,QAAQ,MAAM;AAE/B,OAAO,MAAMC,mBAAmB,GAAGA,CAAA,KAAK;EAEpC,MAAMC,eAAe,GAAGR,MAAM,CAACE,eAAe,CAAC;EAC/C,MAAMO,iBAAiB,GAAGT,MAAM,CAACC,iBAAiB,CAAC;EACnD,MAAMS,oBAAoB,GAAGV,MAAM,CAACG,oBAAoB,CAAC;EACzD,MAAMQ,gBAAgB,GAAGX,MAAM,CAACI,gBAAgB,CAAC;EACjD,MAAMQ,gBAAgB,GAAGZ,MAAM,CAACK,gBAAgB,CAAC;EAEjD;EACA,OAAOC,QAAQ,CAAC,CACZG,iBAAiB,CAACI,GAAG,EAAE,EACvBL,eAAe,CAACM,MAAM,EAAE,EACxBJ,oBAAoB,CAACI,MAAM,EAAE,EAC7BH,gBAAgB,CAACI,QAAQ,EAAE,EAC3BH,gBAAgB,CAACE,MAAM,EAAE,CAC5B,CAAC;AACN,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}