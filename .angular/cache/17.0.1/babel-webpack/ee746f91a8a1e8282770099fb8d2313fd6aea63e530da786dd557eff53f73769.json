{"ast":null,"code":"import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { FuseAnimationCurves, FuseAnimationDurations } from '@fuse/animations/defaults';\n// -----------------------------------------------------------------------------------------------------\n// @ Slide in top\n// -----------------------------------------------------------------------------------------------------\nconst slideInTop = trigger('slideInTop', [state('void', style({\n  transform: 'translate3d(0, -100%, 0)'\n})), state('*', style({\n  transform: 'translate3d(0, 0, 0)'\n})),\n// Prevent the transition if the state is false\ntransition('void => false', []),\n// Transition\ntransition('void => *', animate('{{timings}}'), {\n  params: {\n    timings: `${FuseAnimationDurations.entering} ${FuseAnimationCurves.deceleration}`\n  }\n})]);\n// -----------------------------------------------------------------------------------------------------\n// @ Slide in bottom\n// -----------------------------------------------------------------------------------------------------\nconst slideInBottom = trigger('slideInBottom', [state('void', style({\n  transform: 'translate3d(0, 100%, 0)'\n})), state('*', style({\n  transform: 'translate3d(0, 0, 0)'\n})),\n// Prevent the transition if the state is false\ntransition('void => false', []),\n// Transition\ntransition('void => *', animate('{{timings}}'), {\n  params: {\n    timings: `${FuseAnimationDurations.entering} ${FuseAnimationCurves.deceleration}`\n  }\n})]);\n// -----------------------------------------------------------------------------------------------------\n// @ Slide in left\n// -----------------------------------------------------------------------------------------------------\nconst slideInLeft = trigger('slideInLeft', [state('void', style({\n  transform: 'translate3d(-100%, 0, 0)'\n})), state('*', style({\n  transform: 'translate3d(0, 0, 0)'\n})),\n// Prevent the transition if the state is false\ntransition('void => false', []),\n// Transition\ntransition('void => *', animate('{{timings}}'), {\n  params: {\n    timings: `${FuseAnimationDurations.entering} ${FuseAnimationCurves.deceleration}`\n  }\n})]);\n// -----------------------------------------------------------------------------------------------------\n// @ Slide in right\n// -----------------------------------------------------------------------------------------------------\nconst slideInRight = trigger('slideInRight', [state('void', style({\n  transform: 'translate3d(100%, 0, 0)'\n})), state('*', style({\n  transform: 'translate3d(0, 0, 0)'\n})),\n// Prevent the transition if the state is false\ntransition('void => false', []),\n// Transition\ntransition('void => *', animate('{{timings}}'), {\n  params: {\n    timings: `${FuseAnimationDurations.entering} ${FuseAnimationCurves.deceleration}`\n  }\n})]);\n// -----------------------------------------------------------------------------------------------------\n// @ Slide out top\n// -----------------------------------------------------------------------------------------------------\nconst slideOutTop = trigger('slideOutTop', [state('*', style({\n  transform: 'translate3d(0, 0, 0)'\n})), state('void', style({\n  transform: 'translate3d(0, -100%, 0)'\n})),\n// Prevent the transition if the state is false\ntransition('false => void', []),\n// Transition\ntransition('* => void', animate('{{timings}}'), {\n  params: {\n    timings: `${FuseAnimationDurations.exiting} ${FuseAnimationCurves.acceleration}`\n  }\n})]);\n// -----------------------------------------------------------------------------------------------------\n// @ Slide out bottom\n// -----------------------------------------------------------------------------------------------------\nconst slideOutBottom = trigger('slideOutBottom', [state('*', style({\n  transform: 'translate3d(0, 0, 0)'\n})), state('void', style({\n  transform: 'translate3d(0, 100%, 0)'\n})),\n// Prevent the transition if the state is false\ntransition('false => void', []),\n// Transition\ntransition('* => void', animate('{{timings}}'), {\n  params: {\n    timings: `${FuseAnimationDurations.exiting} ${FuseAnimationCurves.acceleration}`\n  }\n})]);\n// -----------------------------------------------------------------------------------------------------\n// @ Slide out left\n// -----------------------------------------------------------------------------------------------------\nconst slideOutLeft = trigger('slideOutLeft', [state('*', style({\n  transform: 'translate3d(0, 0, 0)'\n})), state('void', style({\n  transform: 'translate3d(-100%, 0, 0)'\n})),\n// Prevent the transition if the state is false\ntransition('false => void', []),\n// Transition\ntransition('* => void', animate('{{timings}}'), {\n  params: {\n    timings: `${FuseAnimationDurations.exiting} ${FuseAnimationCurves.acceleration}`\n  }\n})]);\n// -----------------------------------------------------------------------------------------------------\n// @ Slide out right\n// -----------------------------------------------------------------------------------------------------\nconst slideOutRight = trigger('slideOutRight', [state('*', style({\n  transform: 'translate3d(0, 0, 0)'\n})), state('void', style({\n  transform: 'translate3d(100%, 0, 0)'\n})),\n// Prevent the transition if the state is false\ntransition('false => void', []),\n// Transition\ntransition('* => void', animate('{{timings}}'), {\n  params: {\n    timings: `${FuseAnimationDurations.exiting} ${FuseAnimationCurves.acceleration}`\n  }\n})]);\nexport { slideInTop, slideInBottom, slideInLeft, slideInRight, slideOutTop, slideOutBottom, slideOutLeft, slideOutRight };","map":{"version":3,"names":["animate","state","style","transition","trigger","FuseAnimationCurves","FuseAnimationDurations","slideInTop","transform","params","timings","entering","deceleration","slideInBottom","slideInLeft","slideInRight","slideOutTop","exiting","acceleration","slideOutBottom","slideOutLeft","slideOutRight"],"sources":["/Users/tusharphalke/Documents/Freelancing_Work/rrms_frontend/src/@fuse/animations/slide.ts"],"sourcesContent":["import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { FuseAnimationCurves, FuseAnimationDurations } from '@fuse/animations/defaults';\n\n// -----------------------------------------------------------------------------------------------------\n// @ Slide in top\n// -----------------------------------------------------------------------------------------------------\nconst slideInTop = trigger('slideInTop',\n    [\n        state('void',\n            style({\n                transform: 'translate3d(0, -100%, 0)',\n            }),\n        ),\n\n        state('*',\n            style({\n                transform: 'translate3d(0, 0, 0)',\n            }),\n        ),\n\n        // Prevent the transition if the state is false\n        transition('void => false', []),\n\n        // Transition\n        transition('void => *', animate('{{timings}}'),\n            {\n                params: {\n                    timings: `${FuseAnimationDurations.entering} ${FuseAnimationCurves.deceleration}`,\n                },\n            },\n        ),\n    ],\n);\n\n// -----------------------------------------------------------------------------------------------------\n// @ Slide in bottom\n// -----------------------------------------------------------------------------------------------------\nconst slideInBottom = trigger('slideInBottom',\n    [\n        state('void',\n            style({\n                transform: 'translate3d(0, 100%, 0)',\n            }),\n        ),\n\n        state('*',\n            style({\n                transform: 'translate3d(0, 0, 0)',\n            }),\n        ),\n\n        // Prevent the transition if the state is false\n        transition('void => false', []),\n\n        // Transition\n        transition('void => *', animate('{{timings}}'),\n            {\n                params: {\n                    timings: `${FuseAnimationDurations.entering} ${FuseAnimationCurves.deceleration}`,\n                },\n            },\n        ),\n    ],\n);\n\n// -----------------------------------------------------------------------------------------------------\n// @ Slide in left\n// -----------------------------------------------------------------------------------------------------\nconst slideInLeft = trigger('slideInLeft',\n    [\n        state('void',\n            style({\n                transform: 'translate3d(-100%, 0, 0)',\n            }),\n        ),\n\n        state('*',\n            style({\n                transform: 'translate3d(0, 0, 0)',\n            }),\n        ),\n\n        // Prevent the transition if the state is false\n        transition('void => false', []),\n\n        // Transition\n        transition('void => *', animate('{{timings}}'),\n            {\n                params: {\n                    timings: `${FuseAnimationDurations.entering} ${FuseAnimationCurves.deceleration}`,\n                },\n            },\n        ),\n    ],\n);\n\n// -----------------------------------------------------------------------------------------------------\n// @ Slide in right\n// -----------------------------------------------------------------------------------------------------\nconst slideInRight = trigger('slideInRight',\n    [\n        state('void',\n            style({\n                transform: 'translate3d(100%, 0, 0)',\n            }),\n        ),\n\n        state('*',\n            style({\n                transform: 'translate3d(0, 0, 0)',\n            }),\n        ),\n\n        // Prevent the transition if the state is false\n        transition('void => false', []),\n\n        // Transition\n        transition('void => *', animate('{{timings}}'),\n            {\n                params: {\n                    timings: `${FuseAnimationDurations.entering} ${FuseAnimationCurves.deceleration}`,\n                },\n            },\n        ),\n    ],\n);\n\n// -----------------------------------------------------------------------------------------------------\n// @ Slide out top\n// -----------------------------------------------------------------------------------------------------\nconst slideOutTop = trigger('slideOutTop',\n    [\n        state('*',\n            style({\n                transform: 'translate3d(0, 0, 0)',\n            }),\n        ),\n\n        state('void',\n            style({\n                transform: 'translate3d(0, -100%, 0)',\n            }),\n        ),\n\n        // Prevent the transition if the state is false\n        transition('false => void', []),\n\n        // Transition\n        transition('* => void', animate('{{timings}}'),\n            {\n                params: {\n                    timings: `${FuseAnimationDurations.exiting} ${FuseAnimationCurves.acceleration}`,\n                },\n            },\n        ),\n    ],\n);\n\n// -----------------------------------------------------------------------------------------------------\n// @ Slide out bottom\n// -----------------------------------------------------------------------------------------------------\nconst slideOutBottom = trigger('slideOutBottom',\n    [\n        state('*',\n            style({\n                transform: 'translate3d(0, 0, 0)',\n            }),\n        ),\n\n        state('void',\n            style({\n                transform: 'translate3d(0, 100%, 0)',\n            }),\n        ),\n\n        // Prevent the transition if the state is false\n        transition('false => void', []),\n\n        // Transition\n        transition('* => void', animate('{{timings}}'),\n            {\n                params: {\n                    timings: `${FuseAnimationDurations.exiting} ${FuseAnimationCurves.acceleration}`,\n                },\n            },\n        ),\n    ],\n);\n\n// -----------------------------------------------------------------------------------------------------\n// @ Slide out left\n// -----------------------------------------------------------------------------------------------------\nconst slideOutLeft = trigger('slideOutLeft',\n    [\n        state('*',\n            style({\n                transform: 'translate3d(0, 0, 0)',\n            }),\n        ),\n\n        state('void',\n            style({\n                transform: 'translate3d(-100%, 0, 0)',\n            }),\n        ),\n\n        // Prevent the transition if the state is false\n        transition('false => void', []),\n\n        // Transition\n        transition('* => void', animate('{{timings}}'),\n            {\n                params: {\n                    timings: `${FuseAnimationDurations.exiting} ${FuseAnimationCurves.acceleration}`,\n                },\n            },\n        ),\n    ],\n);\n\n// -----------------------------------------------------------------------------------------------------\n// @ Slide out right\n// -----------------------------------------------------------------------------------------------------\nconst slideOutRight = trigger('slideOutRight',\n    [\n        state('*',\n            style({\n                transform: 'translate3d(0, 0, 0)',\n            }),\n        ),\n\n        state('void',\n            style({\n                transform: 'translate3d(100%, 0, 0)',\n            }),\n        ),\n\n        // Prevent the transition if the state is false\n        transition('false => void', []),\n\n        // Transition\n        transition('* => void', animate('{{timings}}'),\n            {\n                params: {\n                    timings: `${FuseAnimationDurations.exiting} ${FuseAnimationCurves.acceleration}`,\n                },\n            },\n        ),\n    ],\n);\n\nexport { slideInTop, slideInBottom, slideInLeft, slideInRight, slideOutTop, slideOutBottom, slideOutLeft, slideOutRight };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}