{"ast":null,"code":"import { project as projectData } from 'app/mock-api/dashboards/project/data';\nimport { cloneDeep } from 'lodash-es';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@fuse/lib/mock-api\";\nexport class ProjectMockApi {\n  /**\n   * Constructor\n   */\n  constructor(_fuseMockApiService) {\n    this._fuseMockApiService = _fuseMockApiService;\n    this._project = projectData;\n    // Register Mock API handlers\n    this.registerHandlers();\n  }\n  // -----------------------------------------------------------------------------------------------------\n  // @ Public methods\n  // -----------------------------------------------------------------------------------------------------\n  /**\n   * Register Mock API handlers\n   */\n  registerHandlers() {\n    // -----------------------------------------------------------------------------------------------------\n    // @ Sales - GET\n    // -----------------------------------------------------------------------------------------------------\n    this._fuseMockApiService.onGet('api/dashboards/project').reply(() => [200, cloneDeep(this._project)]);\n  }\n  static #_ = this.ɵfac = function ProjectMockApi_Factory(t) {\n    return new (t || ProjectMockApi)(i0.ɵɵinject(i1.FuseMockApiService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProjectMockApi,\n    factory: ProjectMockApi.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["project","projectData","cloneDeep","ProjectMockApi","constructor","_fuseMockApiService","_project","registerHandlers","onGet","reply","_","i0","ɵɵinject","i1","FuseMockApiService","_2","factory","ɵfac","providedIn"],"sources":["/Users/tusharphalke/Documents/Freelancing_Work/rrms_frontend/src/app/mock-api/dashboards/project/api.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { FuseMockApiService } from '@fuse/lib/mock-api';\nimport { project as projectData } from 'app/mock-api/dashboards/project/data';\nimport { cloneDeep } from 'lodash-es';\n\n@Injectable({providedIn: 'root'})\nexport class ProjectMockApi\n{\n    private _project: any = projectData;\n\n    /**\n     * Constructor\n     */\n    constructor(private _fuseMockApiService: FuseMockApiService)\n    {\n        // Register Mock API handlers\n        this.registerHandlers();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Register Mock API handlers\n     */\n    registerHandlers(): void\n    {\n        // -----------------------------------------------------------------------------------------------------\n        // @ Sales - GET\n        // -----------------------------------------------------------------------------------------------------\n        this._fuseMockApiService\n            .onGet('api/dashboards/project')\n            .reply(() => [200, cloneDeep(this._project)]);\n    }\n}\n"],"mappings":"AAEA,SAASA,OAAO,IAAIC,WAAW,QAAQ,sCAAsC;AAC7E,SAASC,SAAS,QAAQ,WAAW;;;AAGrC,OAAM,MAAOC,cAAc;EAIvB;;;EAGAC,YAAoBC,mBAAuC;IAAvC,KAAAA,mBAAmB,GAAnBA,mBAAmB;IAL/B,KAAAC,QAAQ,GAAQL,WAAW;IAO/B;IACA,IAAI,CAACM,gBAAgB,EAAE;EAC3B;EAEA;EACA;EACA;EAEA;;;EAGAA,gBAAgBA,CAAA;IAEZ;IACA;IACA;IACA,IAAI,CAACF,mBAAmB,CACnBG,KAAK,CAAC,wBAAwB,CAAC,CAC/BC,KAAK,CAAC,MAAM,CAAC,GAAG,EAAEP,SAAS,CAAC,IAAI,CAACI,QAAQ,CAAC,CAAC,CAAC;EACrD;EAAC,QAAAI,CAAA,G;qBA5BQP,cAAc,EAAAQ,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,kBAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdZ,cAAc;IAAAa,OAAA,EAAdb,cAAc,CAAAc,IAAA;IAAAC,UAAA,EADF;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}