{"ast":null,"code":"import { analytics as analyticsData } from 'app/mock-api/dashboards/analytics/data';\nimport { cloneDeep } from 'lodash-es';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@fuse/lib/mock-api\";\nexport class AnalyticsMockApi {\n  /**\n   * Constructor\n   */\n  constructor(_fuseMockApiService) {\n    this._fuseMockApiService = _fuseMockApiService;\n    this._analytics = analyticsData;\n    // Register Mock API handlers\n    this.registerHandlers();\n  }\n  // -----------------------------------------------------------------------------------------------------\n  // @ Public methods\n  // -----------------------------------------------------------------------------------------------------\n  /**\n   * Register Mock API handlers\n   */\n  registerHandlers() {\n    // -----------------------------------------------------------------------------------------------------\n    // @ Sales - GET\n    // -----------------------------------------------------------------------------------------------------\n    this._fuseMockApiService.onGet('api/dashboards/analytics').reply(() => [200, cloneDeep(this._analytics)]);\n  }\n  static #_ = this.ɵfac = function AnalyticsMockApi_Factory(t) {\n    return new (t || AnalyticsMockApi)(i0.ɵɵinject(i1.FuseMockApiService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AnalyticsMockApi,\n    factory: AnalyticsMockApi.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["analytics","analyticsData","cloneDeep","AnalyticsMockApi","constructor","_fuseMockApiService","_analytics","registerHandlers","onGet","reply","_","i0","ɵɵinject","i1","FuseMockApiService","_2","factory","ɵfac","providedIn"],"sources":["/Users/tusharphalke/Documents/Freelancing_Work/rrms_frontend/src/app/mock-api/dashboards/analytics/api.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { FuseMockApiService } from '@fuse/lib/mock-api';\nimport { analytics as analyticsData } from 'app/mock-api/dashboards/analytics/data';\nimport { cloneDeep } from 'lodash-es';\n\n@Injectable({providedIn: 'root'})\nexport class AnalyticsMockApi\n{\n    private _analytics: any = analyticsData;\n\n    /**\n     * Constructor\n     */\n    constructor(private _fuseMockApiService: FuseMockApiService)\n    {\n        // Register Mock API handlers\n        this.registerHandlers();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Register Mock API handlers\n     */\n    registerHandlers(): void\n    {\n        // -----------------------------------------------------------------------------------------------------\n        // @ Sales - GET\n        // -----------------------------------------------------------------------------------------------------\n        this._fuseMockApiService\n            .onGet('api/dashboards/analytics')\n            .reply(() => [200, cloneDeep(this._analytics)]);\n    }\n}\n"],"mappings":"AAEA,SAASA,SAAS,IAAIC,aAAa,QAAQ,wCAAwC;AACnF,SAASC,SAAS,QAAQ,WAAW;;;AAGrC,OAAM,MAAOC,gBAAgB;EAIzB;;;EAGAC,YAAoBC,mBAAuC;IAAvC,KAAAA,mBAAmB,GAAnBA,mBAAmB;IAL/B,KAAAC,UAAU,GAAQL,aAAa;IAOnC;IACA,IAAI,CAACM,gBAAgB,EAAE;EAC3B;EAEA;EACA;EACA;EAEA;;;EAGAA,gBAAgBA,CAAA;IAEZ;IACA;IACA;IACA,IAAI,CAACF,mBAAmB,CACnBG,KAAK,CAAC,0BAA0B,CAAC,CACjCC,KAAK,CAAC,MAAM,CAAC,GAAG,EAAEP,SAAS,CAAC,IAAI,CAACI,UAAU,CAAC,CAAC,CAAC;EACvD;EAAC,QAAAI,CAAA,G;qBA5BQP,gBAAgB,EAAAQ,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,kBAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAhBZ,gBAAgB;IAAAa,OAAA,EAAhBb,gBAAgB,CAAAc,IAAA;IAAAC,UAAA,EADJ;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}