{"ast":null,"code":"import { ReactiveFormsModule, FormsModule, Validators } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { TranslocoModule } from '@ngneat/transloco';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../search-document/searchDoc.service\";\nconst _c0 = [\"addcitizenInformationNgForm\"];\nconst _c1 = [\"sort1\"];\nconst _c2 = [\"paginator1\"];\nexport class SearchUserlistComponent {\n  /**\n   * Constructor\n   */\n  constructor(_changeDetectorRef, _formBuilder, _citizeninfoService) {\n    this._changeDetectorRef = _changeDetectorRef;\n    this._formBuilder = _formBuilder;\n    this._citizeninfoService = _citizeninfoService;\n    this.formFieldHelpers = [''];\n    this.isLoading = false;\n    this._unsubscribeAll = new Subject();\n    this.citizenInfoDropdown = [{\n      id: 0,\n      value: 'test1'\n    }, {\n      id: 1,\n      value: 'test2'\n    }];\n    this.dataShow = [{\n      id: 0,\n      value: 'Addhar Card'\n    }, {\n      id: 1,\n      value: 'PanCard'\n    }];\n    this.dataSource = [];\n    this.columns = [{\n      labelen: 'ID',\n      labelhi: 'Case No',\n      property: 'wlId'\n    }, {\n      labelen: 'Name',\n      labelhi: 'Document',\n      property: 'wlName'\n    }, {\n      labelen: 'Action',\n      labelhi: 'Action',\n      property: 'action'\n    }];\n    this.displayedColumns = ['wlId', 'wlName', 'action'];\n    // this.dataSource =this.dataShow;\n  }\n  // -----------------------------------------------------------------------------------------------------\n  // @ Lifecycle hooks\n  // -----------------------------------------------------------------------------------------------------\n  /**\n   * On init\n   */\n  ngOnInit() {\n    this.initForm();\n  }\n  /**\n   * On destroy\n   */\n  ngOnDestroy() {\n    // Unsubscribe from all subscriptions\n    this._unsubscribeAll.next(null);\n    this._unsubscribeAll.complete();\n  }\n  initForm() {\n    this.addcitizenInformationForm = this._formBuilder.group({\n      citizenInfo: ['', [Validators.required]],\n      startDate: ['', [Validators.required]],\n      endDate: ['', [Validators.required]],\n      policStation: ['', [Validators.required]],\n      districtId: ['', [Validators.required]],\n      location: ['', [Validators.required]]\n    });\n  }\n  /**\n   * Citizen Feedback Create\n   */\n  saveCitizenFeedback() {}\n  /**\n   * Update the Citizen Feedback\n   */\n  updateCitizenFeedback() {\n    const product = this.addcitizenInformationForm.getRawValue();\n    delete product.currentImageIndex;\n  }\n  /**\n   * Clear the form\n   */\n  clearForm() {\n    // Reset the form\n    this.addcitizenInformationNgForm.resetForm();\n  }\n  SelectDataCase(value) {}\n  filterDropDownData(event) {}\n  /**\n   * Track by function for ngFor loops\n   *\n   * @param index\n   * @param item\n   */\n  trackByFn(index, item) {\n    return item.id || index;\n  }\n  static #_ = this.ɵfac = function SearchUserlistComponent_Factory(t) {\n    return new (t || SearchUserlistComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.UntypedFormBuilder), i0.ɵɵdirectiveInject(i2.SearchDocService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SearchUserlistComponent,\n    selectors: [[\"app-search-userlist\"]],\n    viewQuery: function SearchUserlistComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n        i0.ɵɵviewQuery(_c2, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.addcitizenInformationNgForm = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sort1 = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginator1 = _t.first);\n      }\n    },\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 2,\n    vars: 0,\n    template: function SearchUserlistComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"search-userlist works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    dependencies: [MatSelectModule, MatDatepickerModule, TranslocoModule, MatFormFieldModule, MatIconModule, ReactiveFormsModule, MatRippleModule, FormsModule, MatInputModule, MatButtonModule, MatTableModule, MatPaginatorModule, MatSortModule],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["ReactiveFormsModule","FormsModule","Validators","MatButtonModule","MatRippleModule","MatDatepickerModule","MatFormFieldModule","MatIconModule","MatInputModule","MatPaginatorModule","MatSelectModule","MatSortModule","MatTableModule","TranslocoModule","Subject","SearchUserlistComponent","constructor","_changeDetectorRef","_formBuilder","_citizeninfoService","formFieldHelpers","isLoading","_unsubscribeAll","citizenInfoDropdown","id","value","dataShow","dataSource","columns","labelen","labelhi","property","displayedColumns","ngOnInit","initForm","ngOnDestroy","next","complete","addcitizenInformationForm","group","citizenInfo","required","startDate","endDate","policStation","districtId","location","saveCitizenFeedback","updateCitizenFeedback","product","getRawValue","currentImageIndex","clearForm","addcitizenInformationNgForm","resetForm","SelectDataCase","filterDropDownData","event","trackByFn","index","item","_","i0","ɵɵdirectiveInject","ChangeDetectorRef","i1","UntypedFormBuilder","i2","SearchDocService","_2","selectors","viewQuery","SearchUserlistComponent_Query","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","styles"],"sources":["/Users/tusharphalke/Documents/Freelancing_Work/rrms_frontend/src/app/modules/admin/pages/manage-user/search-userlist/search-userlist.component.ts","/Users/tusharphalke/Documents/Freelancing_Work/rrms_frontend/src/app/modules/admin/pages/manage-user/search-userlist/search-userlist.component.html"],"sourcesContent":["import { NgIf, NgFor, NgTemplateOutlet, NgClass, CurrencyPipe } from '@angular/common';\nimport { ChangeDetectorRef, Component, ViewChild } from '@angular/core';\nimport { ReactiveFormsModule, FormsModule, NgForm, UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatPaginator, MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSort, MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { RouterLink } from '@angular/router';\nimport { TranslocoModule } from '@ngneat/transloco';\nimport { Subject } from 'rxjs';\nimport { SearchDocService } from '../../search-document/searchDoc.service';\nimport { InventoryVendor } from '../../upload-document/uploadDoc.types';\n\n@Component({\n  selector: 'app-search-userlist',\n  standalone: true,\n  imports: [\n    NgIf,\n    RouterLink,\n    MatSelectModule,\n    MatDatepickerModule,\n    TranslocoModule,\n    MatFormFieldModule,\n    MatIconModule,\n    ReactiveFormsModule,\n    NgFor,\n    NgTemplateOutlet,\n    NgClass,\n    MatRippleModule,\n    CurrencyPipe,\n    MatIconModule,\n    FormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule\n],\n  templateUrl: './search-userlist.component.html',\n  styleUrl: './search-userlist.component.scss'\n})\nexport class SearchUserlistComponent {\naddcitizenInformationForm: UntypedFormGroup;\n    @ViewChild('addcitizenInformationNgForm') addcitizenInformationNgForm: NgForm;\n    formFieldHelpers: string[] = [''];\n    isLoading: boolean = false;\n    vendors: InventoryVendor[];\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\n    alert: { type: string; message: string };\n    citizenInfoDropdown = [\n        {\n            id: 0,\n            value: 'test1',\n        },\n        {\n            id: 1,\n            value: 'test2',\n        },\n    ];\n    dataShow = [\n        {\n            id: 0,\n            value: 'Addhar Card',\n        },\n        {\n            id: 1,\n            value: 'PanCard',\n        },\n    ];\n    @ViewChild('sort1') sort1: MatSort;\n    @ViewChild('paginator1') paginator1: MatPaginator\n    dataSource: any=[];\n    columns: any[] = [\n        { labelen: 'ID', labelhi: 'Case No', property: 'wlId' },\n        { labelen: 'Name',labelhi:'Document', property: 'wlName' },\n        { labelen: 'Action',  labelhi:'Action',property: 'action' },\n    \n      ];\n    \n      displayedColumns: string[] = ['wlId','wlName','action'];\n    \n    /**\n     * Constructor\n     */\n    constructor(\n        private _changeDetectorRef: ChangeDetectorRef,\n        private _formBuilder: UntypedFormBuilder,\n        private _citizeninfoService: SearchDocService\n    ) {\n        // this.dataSource =this.dataShow;\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void {\n        this.initForm();\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next(null);\n        this._unsubscribeAll.complete();\n    }\n\n    initForm() {\n        this.addcitizenInformationForm = this._formBuilder.group({\n            citizenInfo: ['', [Validators.required]],\n            startDate: ['', [Validators.required]],\n            endDate: ['', [Validators.required]],\n            policStation: ['', [Validators.required]],\n            districtId: ['', [Validators.required]],\n            location:['',[Validators.required]]\n        });\n    }\n\n    /**\n     * Citizen Feedback Create\n     */\n    saveCitizenFeedback() {}\n\n    /**\n     * Update the Citizen Feedback\n     */\n    updateCitizenFeedback(): void {\n        const product = this.addcitizenInformationForm.getRawValue();\n        delete product.currentImageIndex;\n    }\n\n    /**\n     * Clear the form\n     */\n    clearForm(): void {\n        // Reset the form\n        this.addcitizenInformationNgForm.resetForm();\n    }\n\n    SelectDataCase(value) {}\n\n    filterDropDownData(event) {}\n\n    /**\n     * Track by function for ngFor loops\n     *\n     * @param index\n     * @param item\n     */\n    trackByFn(index: number, item: any): any {\n        return item.id || index;\n    }\n}\n","<p>search-userlist works!</p>\n"],"mappings":"AAEA,SAASA,mBAAmB,EAAEC,WAAW,EAAgDC,UAAU,QAAQ,gBAAgB;AAC3H,SAASC,eAAe,QAAQ,0BAA0B;AAC1D,SAASC,eAAe,QAAQ,wBAAwB;AACxD,SAASC,mBAAmB,QAAQ,8BAA8B;AAClE,SAASC,kBAAkB,QAAQ,8BAA8B;AACjE,SAASC,aAAa,QAAQ,wBAAwB;AACtD,SAASC,cAAc,QAAQ,yBAAyB;AACxD,SAAuBC,kBAAkB,QAAQ,6BAA6B;AAC9E,SAASC,eAAe,QAAQ,0BAA0B;AAC1D,SAAkBC,aAAa,QAAQ,wBAAwB;AAC/D,SAASC,cAAc,QAAQ,yBAAyB;AAExD,SAASC,eAAe,QAAQ,mBAAmB;AACnD,SAASC,OAAO,QAAQ,MAAM;;;;;;;AAiC9B,OAAM,MAAOC,uBAAuB;EAwChC;;;EAGAC,YACYC,kBAAqC,EACrCC,YAAgC,EAChCC,mBAAqC;IAFrC,KAAAF,kBAAkB,GAAlBA,kBAAkB;IAClB,KAAAC,YAAY,GAAZA,YAAY;IACZ,KAAAC,mBAAmB,GAAnBA,mBAAmB;IA3C/B,KAAAC,gBAAgB,GAAa,CAAC,EAAE,CAAC;IACjC,KAAAC,SAAS,GAAY,KAAK;IAElB,KAAAC,eAAe,GAAiB,IAAIR,OAAO,EAAO;IAE1D,KAAAS,mBAAmB,GAAG,CAClB;MACIC,EAAE,EAAE,CAAC;MACLC,KAAK,EAAE;KACV,EACD;MACID,EAAE,EAAE,CAAC;MACLC,KAAK,EAAE;KACV,CACJ;IACD,KAAAC,QAAQ,GAAG,CACP;MACIF,EAAE,EAAE,CAAC;MACLC,KAAK,EAAE;KACV,EACD;MACID,EAAE,EAAE,CAAC;MACLC,KAAK,EAAE;KACV,CACJ;IAGD,KAAAE,UAAU,GAAM,EAAE;IAClB,KAAAC,OAAO,GAAU,CACb;MAAEC,OAAO,EAAE,IAAI;MAAEC,OAAO,EAAE,SAAS;MAAEC,QAAQ,EAAE;IAAM,CAAE,EACvD;MAAEF,OAAO,EAAE,MAAM;MAACC,OAAO,EAAC,UAAU;MAAEC,QAAQ,EAAE;IAAQ,CAAE,EAC1D;MAAEF,OAAO,EAAE,QAAQ;MAAGC,OAAO,EAAC,QAAQ;MAACC,QAAQ,EAAE;IAAQ,CAAE,CAE5D;IAED,KAAAC,gBAAgB,GAAa,CAAC,MAAM,EAAC,QAAQ,EAAC,QAAQ,CAAC;IAUrD;EACJ;EAEA;EACA;EACA;EAEA;;;EAGAC,QAAQA,CAAA;IACJ,IAAI,CAACC,QAAQ,EAAE;EACnB;EAEA;;;EAGAC,WAAWA,CAAA;IACP;IACA,IAAI,CAACb,eAAe,CAACc,IAAI,CAAC,IAAI,CAAC;IAC/B,IAAI,CAACd,eAAe,CAACe,QAAQ,EAAE;EACnC;EAEAH,QAAQA,CAAA;IACJ,IAAI,CAACI,yBAAyB,GAAG,IAAI,CAACpB,YAAY,CAACqB,KAAK,CAAC;MACrDC,WAAW,EAAE,CAAC,EAAE,EAAE,CAACtC,UAAU,CAACuC,QAAQ,CAAC,CAAC;MACxCC,SAAS,EAAE,CAAC,EAAE,EAAE,CAACxC,UAAU,CAACuC,QAAQ,CAAC,CAAC;MACtCE,OAAO,EAAE,CAAC,EAAE,EAAE,CAACzC,UAAU,CAACuC,QAAQ,CAAC,CAAC;MACpCG,YAAY,EAAE,CAAC,EAAE,EAAE,CAAC1C,UAAU,CAACuC,QAAQ,CAAC,CAAC;MACzCI,UAAU,EAAE,CAAC,EAAE,EAAE,CAAC3C,UAAU,CAACuC,QAAQ,CAAC,CAAC;MACvCK,QAAQ,EAAC,CAAC,EAAE,EAAC,CAAC5C,UAAU,CAACuC,QAAQ,CAAC;KACrC,CAAC;EACN;EAEA;;;EAGAM,mBAAmBA,CAAA,GAAI;EAEvB;;;EAGAC,qBAAqBA,CAAA;IACjB,MAAMC,OAAO,GAAG,IAAI,CAACX,yBAAyB,CAACY,WAAW,EAAE;IAC5D,OAAOD,OAAO,CAACE,iBAAiB;EACpC;EAEA;;;EAGAC,SAASA,CAAA;IACL;IACA,IAAI,CAACC,2BAA2B,CAACC,SAAS,EAAE;EAChD;EAEAC,cAAcA,CAAC9B,KAAK,GAAG;EAEvB+B,kBAAkBA,CAACC,KAAK,GAAG;EAE3B;;;;;;EAMAC,SAASA,CAACC,KAAa,EAAEC,IAAS;IAC9B,OAAOA,IAAI,CAACpC,EAAE,IAAImC,KAAK;EAC3B;EAAC,QAAAE,CAAA,G;qBAnHQ9C,uBAAuB,EAAA+C,EAAA,CAAAC,iBAAA,CAAAD,EAAA,CAAAE,iBAAA,GAAAF,EAAA,CAAAC,iBAAA,CAAAE,EAAA,CAAAC,kBAAA,GAAAJ,EAAA,CAAAC,iBAAA,CAAAI,EAAA,CAAAC,gBAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAvBtD,uBAAuB;IAAAuD,SAAA;IAAAC,SAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;;;;;;;;;;;;;;;;;;QChDpCX,EAAA,CAAAa,cAAA,QAAG;QAAAb,EAAA,CAAAc,MAAA,6BAAsB;QAAAd,EAAA,CAAAe,YAAA,EAAI;;;mBDyBzBnE,eAAe,EACfL,mBAAmB,EACnBQ,eAAe,EACfP,kBAAkB,EAClBC,aAAa,EACbP,mBAAmB,EAInBI,eAAe,EAGfH,WAAW,EAEXO,cAAc,EACdL,eAAe,EACfS,cAAc,EACdH,kBAAkB,EAClBE,aAAa;IAAAmE,MAAA;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}