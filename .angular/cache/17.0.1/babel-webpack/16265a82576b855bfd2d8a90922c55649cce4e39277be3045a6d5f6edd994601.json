{"ast":null,"code":"import { TemplatePortal } from '@angular/cdk/portal';\nimport { DatePipe, NgClass, NgFor, NgIf, NgTemplateOutlet } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { RouterLink } from '@angular/router';\nimport { Subject, takeUntil } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"app/layout/common/notifications/notifications.service\";\nimport * as i2 from \"@angular/cdk/overlay\";\nimport * as i3 from \"@angular/material/button\";\nimport * as i4 from \"@angular/material/icon\";\nimport * as i5 from \"@angular/material/tooltip\";\nconst _c0 = [\"notificationsOrigin\"];\nconst _c1 = [\"notificationsPanel\"];\nfunction NotificationsComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"span\", 5)(2, \"span\", 6);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.unreadCount, \" \");\n  }\n}\nfunction NotificationsComponent_ng_template_4_ng_container_11_ng_container_2_ng_container_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction NotificationsComponent_ng_template_4_ng_container_11_ng_container_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"a\", 23);\n    i0.ɵɵtemplate(2, NotificationsComponent_ng_template_4_ng_container_11_ng_container_2_ng_container_1_ng_container_2_Template, 1, 0, \"ng-container\", 24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const notification_r6 = i0.ɵɵnextContext(2).$implicit;\n    const _r10 = i0.ɵɵreference(10);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"href\", notification_r6.link, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r10);\n  }\n}\nfunction NotificationsComponent_ng_template_4_ng_container_11_ng_container_2_ng_container_2_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction NotificationsComponent_ng_template_4_ng_container_11_ng_container_2_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"a\", 25);\n    i0.ɵɵtemplate(2, NotificationsComponent_ng_template_4_ng_container_11_ng_container_2_ng_container_2_ng_container_2_Template, 1, 0, \"ng-container\", 24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const notification_r6 = i0.ɵɵnextContext(2).$implicit;\n    const _r10 = i0.ɵɵreference(10);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"routerLink\", notification_r6.link);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r10);\n  }\n}\nfunction NotificationsComponent_ng_template_4_ng_container_11_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NotificationsComponent_ng_template_4_ng_container_11_ng_container_2_ng_container_1_Template, 3, 2, \"ng-container\", 2)(2, NotificationsComponent_ng_template_4_ng_container_11_ng_container_2_ng_container_2_Template, 3, 2, \"ng-container\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const notification_r6 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !notification_r6.useRouter);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", notification_r6.useRouter);\n  }\n}\nfunction NotificationsComponent_ng_template_4_ng_container_11_ng_container_3_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction NotificationsComponent_ng_template_4_ng_container_11_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 26);\n    i0.ɵɵtemplate(2, NotificationsComponent_ng_template_4_ng_container_11_ng_container_3_ng_container_2_Template, 1, 0, \"ng-container\", 24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r10 = i0.ɵɵreference(10);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r10);\n  }\n}\nfunction NotificationsComponent_ng_template_4_ng_container_11_ng_template_9_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 29);\n    i0.ɵɵelement(2, \"mat-icon\", 30);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const notification_r6 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"svgIcon\", notification_r6.icon);\n  }\n}\nfunction NotificationsComponent_ng_template_4_ng_container_11_ng_template_9_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"img\", 31);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const notification_r6 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", notification_r6.image, i0.ɵɵsanitizeUrl)(\"alt\", \"Notification image\");\n  }\n}\nfunction NotificationsComponent_ng_template_4_ng_container_11_ng_template_9_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"div\", 32);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const notification_r6 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", notification_r6.title, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction NotificationsComponent_ng_template_4_ng_container_11_ng_template_9_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"div\", 33);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const notification_r6 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", notification_r6.description, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction NotificationsComponent_ng_template_4_ng_container_11_ng_template_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NotificationsComponent_ng_template_4_ng_container_11_ng_template_9_ng_container_0_Template, 3, 1, \"ng-container\", 2)(1, NotificationsComponent_ng_template_4_ng_container_11_ng_template_9_ng_container_1_Template, 2, 2, \"ng-container\", 2);\n    i0.ɵɵelementStart(2, \"div\", 27);\n    i0.ɵɵtemplate(3, NotificationsComponent_ng_template_4_ng_container_11_ng_template_9_ng_container_3_Template, 2, 1, \"ng-container\", 2)(4, NotificationsComponent_ng_template_4_ng_container_11_ng_template_9_ng_container_4_Template, 2, 1, \"ng-container\", 2);\n    i0.ɵɵelementStart(5, \"div\", 28);\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"date\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const notification_r6 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"ngIf\", notification_r6.icon && !notification_r6.image);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", notification_r6.image);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", notification_r6.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", notification_r6.description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(7, 5, notification_r6.time, \"MMM dd, h:mm a\"), \" \");\n  }\n}\nconst _c2 = a0 => ({\n  \"unread\": a0\n});\nconst _c3 = (a0, a1) => ({\n  \"bg-gray-400 dark:bg-gray-500 sm:opacity-0 sm:group-hover:opacity-100\": a0,\n  \"bg-primary\": a1\n});\nfunction NotificationsComponent_ng_template_4_ng_container_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r29 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 16);\n    i0.ɵɵtemplate(2, NotificationsComponent_ng_template_4_ng_container_11_ng_container_2_Template, 3, 2, \"ng-container\", 2)(3, NotificationsComponent_ng_template_4_ng_container_11_ng_container_3_Template, 3, 1, \"ng-container\", 2);\n    i0.ɵɵelementStart(4, \"div\", 17)(5, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function NotificationsComponent_ng_template_4_ng_container_11_Template_button_click_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r29);\n      const notification_r6 = restoredCtx.$implicit;\n      const ctx_r28 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r28.toggleRead(notification_r6));\n    });\n    i0.ɵɵelement(6, \"span\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function NotificationsComponent_ng_template_4_ng_container_11_Template_button_click_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r29);\n      const notification_r6 = restoredCtx.$implicit;\n      const ctx_r30 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r30.delete(notification_r6));\n    });\n    i0.ɵɵelement(8, \"mat-icon\", 21);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(9, NotificationsComponent_ng_template_4_ng_container_11_ng_template_9_Template, 8, 8, \"ng-template\", null, 22, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const notification_r6 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c2, !notification_r6.read));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", notification_r6.link);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !notification_r6.link);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"matTooltip\", notification_r6.read ? \"Mark as unread\" : \"Mark as read\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(9, _c3, notification_r6.read, !notification_r6.read));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"matTooltip\", \"Remove\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"svgIcon\", \"heroicons_solid:x-mark\");\n  }\n}\nfunction NotificationsComponent_ng_template_4_ng_container_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 34)(2, \"div\", 35);\n    i0.ɵɵelement(3, \"mat-icon\", 36);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 37);\n    i0.ɵɵtext(5, \"No notifications\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 38);\n    i0.ɵɵtext(7, \"When you have notifications, they will appear here.\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"svgIcon\", \"heroicons_outline:bell\");\n  }\n}\nfunction NotificationsComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r32 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"div\", 8)(2, \"div\", 9)(3, \"button\", 0);\n    i0.ɵɵlistener(\"click\", function NotificationsComponent_ng_template_4_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r32);\n      const ctx_r31 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r31.closePanel());\n    });\n    i0.ɵɵelement(4, \"mat-icon\", 10);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 11);\n    i0.ɵɵtext(6, \"Notifications\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 12)(8, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function NotificationsComponent_ng_template_4_Template_button_click_8_listener() {\n      i0.ɵɵrestoreView(_r32);\n      const ctx_r33 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r33.markAllAsRead());\n    });\n    i0.ɵɵelement(9, \"mat-icon\", 10);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(10, \"div\", 14);\n    i0.ɵɵtemplate(11, NotificationsComponent_ng_template_4_ng_container_11_Template, 11, 12, \"ng-container\", 15)(12, NotificationsComponent_ng_template_4_ng_container_12_Template, 8, 1, \"ng-container\", 2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"svgIcon\", \"heroicons_solid:x-mark\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"matTooltip\", \"Mark all as read\")(\"disabled\", ctx_r2.unreadCount === 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"svgIcon\", \"heroicons_solid:envelope-open\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.notifications)(\"ngForTrackBy\", ctx_r2.trackByFn);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.notifications || !ctx_r2.notifications.length);\n  }\n}\nexport class NotificationsComponent {\n  /**\n   * Constructor\n   */\n  constructor(_changeDetectorRef, _notificationsService, _overlay, _viewContainerRef) {\n    this._changeDetectorRef = _changeDetectorRef;\n    this._notificationsService = _notificationsService;\n    this._overlay = _overlay;\n    this._viewContainerRef = _viewContainerRef;\n    this.unreadCount = 0;\n    this._unsubscribeAll = new Subject();\n  }\n  // -----------------------------------------------------------------------------------------------------\n  // @ Lifecycle hooks\n  // -----------------------------------------------------------------------------------------------------\n  /**\n   * On init\n   */\n  ngOnInit() {\n    // Subscribe to notification changes\n    this._notificationsService.notifications$.pipe(takeUntil(this._unsubscribeAll)).subscribe(notifications => {\n      // Load the notifications\n      this.notifications = notifications;\n      // Calculate the unread count\n      this._calculateUnreadCount();\n      // Mark for check\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n  /**\n   * On destroy\n   */\n  ngOnDestroy() {\n    // Unsubscribe from all subscriptions\n    this._unsubscribeAll.next(null);\n    this._unsubscribeAll.complete();\n    // Dispose the overlay\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n    }\n  }\n  // -----------------------------------------------------------------------------------------------------\n  // @ Public methods\n  // -----------------------------------------------------------------------------------------------------\n  /**\n   * Open the notifications panel\n   */\n  openPanel() {\n    // Return if the notifications panel or its origin is not defined\n    if (!this._notificationsPanel || !this._notificationsOrigin) {\n      return;\n    }\n    // Create the overlay if it doesn't exist\n    if (!this._overlayRef) {\n      this._createOverlay();\n    }\n    // Attach the portal to the overlay\n    this._overlayRef.attach(new TemplatePortal(this._notificationsPanel, this._viewContainerRef));\n  }\n  /**\n   * Close the notifications panel\n   */\n  closePanel() {\n    this._overlayRef.detach();\n  }\n  /**\n   * Mark all notifications as read\n   */\n  markAllAsRead() {\n    // Mark all as read\n    this._notificationsService.markAllAsRead().subscribe();\n  }\n  /**\n   * Toggle read status of the given notification\n   */\n  toggleRead(notification) {\n    // Toggle the read status\n    notification.read = !notification.read;\n    // Update the notification\n    this._notificationsService.update(notification.id, notification).subscribe();\n  }\n  /**\n   * Delete the given notification\n   */\n  delete(notification) {\n    // Delete the notification\n    this._notificationsService.delete(notification.id).subscribe();\n  }\n  /**\n   * Track by function for ngFor loops\n   *\n   * @param index\n   * @param item\n   */\n  trackByFn(index, item) {\n    return item.id || index;\n  }\n  // -----------------------------------------------------------------------------------------------------\n  // @ Private methods\n  // -----------------------------------------------------------------------------------------------------\n  /**\n   * Create the overlay\n   */\n  _createOverlay() {\n    // Create the overlay\n    this._overlayRef = this._overlay.create({\n      hasBackdrop: true,\n      backdropClass: 'fuse-backdrop-on-mobile',\n      scrollStrategy: this._overlay.scrollStrategies.block(),\n      positionStrategy: this._overlay.position().flexibleConnectedTo(this._notificationsOrigin._elementRef.nativeElement).withLockedPosition(true).withPush(true).withPositions([{\n        originX: 'start',\n        originY: 'bottom',\n        overlayX: 'start',\n        overlayY: 'top'\n      }, {\n        originX: 'start',\n        originY: 'top',\n        overlayX: 'start',\n        overlayY: 'bottom'\n      }, {\n        originX: 'end',\n        originY: 'bottom',\n        overlayX: 'end',\n        overlayY: 'top'\n      }, {\n        originX: 'end',\n        originY: 'top',\n        overlayX: 'end',\n        overlayY: 'bottom'\n      }])\n    });\n    // Detach the overlay from the portal on backdrop click\n    this._overlayRef.backdropClick().subscribe(() => {\n      this._overlayRef.detach();\n    });\n  }\n  /**\n   * Calculate the unread count\n   *\n   * @private\n   */\n  _calculateUnreadCount() {\n    let count = 0;\n    if (this.notifications && this.notifications.length) {\n      count = this.notifications.filter(notification => !notification.read).length;\n    }\n    this.unreadCount = count;\n  }\n  static #_ = this.ɵfac = function NotificationsComponent_Factory(t) {\n    return new (t || NotificationsComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.NotificationsService), i0.ɵɵdirectiveInject(i2.Overlay), i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NotificationsComponent,\n    selectors: [[\"notifications\"]],\n    viewQuery: function NotificationsComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._notificationsOrigin = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._notificationsPanel = _t.first);\n      }\n    },\n    exportAs: [\"notifications\"],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 6,\n    vars: 2,\n    consts: [[\"mat-icon-button\", \"\", 3, \"click\"], [\"notificationsOrigin\", \"\"], [4, \"ngIf\"], [3, \"svgIcon\"], [\"notificationsPanel\", \"\"], [1, \"absolute\", \"top-0\", \"right-0\", \"left-0\", \"flex\", \"items-center\", \"justify-center\", \"h-3\"], [1, \"flex\", \"items-center\", \"justify-center\", \"shrink-0\", \"min-w-4\", \"h-4\", \"px-1\", \"ml-4\", \"mt-2.5\", \"rounded-full\", \"bg-teal-600\", \"text-indigo-50\", \"text-xs\", \"font-medium\"], [1, \"fixed\", \"inset-0\", \"sm:static\", \"sm:inset-auto\", \"flex\", \"flex-col\", \"sm:min-w-90\", \"sm:w-90\", \"sm:rounded-2xl\", \"overflow-hidden\", \"shadow-lg\"], [1, \"flex\", \"shrink-0\", \"items-center\", \"py-4\", \"pr-4\", \"pl-6\", \"bg-primary\", \"text-on-primary\"], [1, \"sm:hidden\", \"-ml-1\", \"mr-3\"], [1, \"icon-size-5\", \"text-current\", 3, \"svgIcon\"], [1, \"text-lg\", \"font-medium\", \"leading-10\"], [1, \"ml-auto\"], [\"mat-icon-button\", \"\", 3, \"matTooltip\", \"disabled\", \"click\"], [1, \"relative\", \"flex\", \"flex-col\", \"flex-auto\", \"sm:max-h-120\", \"divide-y\", \"overflow-y-auto\", \"bg-card\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"flex\", \"group\", \"hover:bg-gray-50\", \"dark:hover:bg-black\", \"dark:hover:bg-opacity-5\", 3, \"ngClass\"], [1, \"relative\", \"flex\", \"flex-col\", \"my-5\", \"mr-6\", \"ml-2\"], [\"mat-icon-button\", \"\", 1, \"w-6\", \"h-6\", \"min-h-6\", 3, \"matTooltip\", \"click\"], [1, \"w-2\", \"h-2\", \"rounded-full\", 3, \"ngClass\"], [\"mat-icon-button\", \"\", 1, \"w-6\", \"h-6\", \"min-h-6\", \"sm:opacity-0\", \"sm:group-hover:opacity-100\", 3, \"matTooltip\", \"click\"], [1, \"icon-size-4\", 3, \"svgIcon\"], [\"notificationContent\", \"\"], [1, \"flex\", \"flex-auto\", \"py-5\", \"pl-6\", \"cursor-pointer\", 3, \"href\"], [4, \"ngTemplateOutlet\"], [1, \"flex\", \"flex-auto\", \"py-5\", \"pl-6\", \"cursor-pointer\", 3, \"routerLink\"], [1, \"flex\", \"flex-auto\", \"py-5\", \"pl-6\"], [1, \"flex\", \"flex-col\", \"flex-auto\"], [1, \"mt-2\", \"text-sm\", \"leading-none\", \"text-secondary\"], [1, \"flex\", \"shrink-0\", \"items-center\", \"justify-center\", \"w-8\", \"h-8\", \"mr-4\", \"rounded-full\", \"bg-gray-100\", \"dark:bg-gray-700\"], [1, \"icon-size-5\", 3, \"svgIcon\"], [1, \"shrink-0\", \"w-8\", \"h-8\", \"mr-4\", \"rounded-full\", \"overflow-hidden\", \"object-cover\", \"object-center\", 3, \"src\", \"alt\"], [1, \"font-semibold\", \"line-clamp-1\", 3, \"innerHTML\"], [1, \"line-clamp-2\", 3, \"innerHTML\"], [1, \"flex\", \"flex-col\", \"flex-auto\", \"items-center\", \"justify-center\", \"sm:justify-start\", \"py-12\", \"px-8\"], [1, \"flex\", \"flex-0\", \"items-center\", \"justify-center\", \"w-14\", \"h-14\", \"rounded-full\", \"bg-primary-100\", \"dark:bg-primary-600\"], [1, \"text-primary-700\", \"dark:text-primary-50\", 3, \"svgIcon\"], [1, \"mt-5\", \"text-2xl\", \"font-semibold\", \"tracking-tight\"], [1, \"w-full\", \"max-w-60\", \"mt-1\", \"text-md\", \"text-center\", \"text-secondary\"]],\n    template: function NotificationsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"button\", 0, 1);\n        i0.ɵɵlistener(\"click\", function NotificationsComponent_Template_button_click_0_listener() {\n          return ctx.openPanel();\n        });\n        i0.ɵɵtemplate(2, NotificationsComponent_ng_container_2_Template, 4, 1, \"ng-container\", 2);\n        i0.ɵɵelement(3, \"mat-icon\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(4, NotificationsComponent_ng_template_4_Template, 13, 7, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.unreadCount > 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"svgIcon\", \"heroicons_outline:bell\");\n      }\n    },\n    dependencies: [MatButtonModule, i3.MatIconButton, NgIf, MatIconModule, i4.MatIcon, MatTooltipModule, i5.MatTooltip, NgFor, NgClass, NgTemplateOutlet, RouterLink, DatePipe],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}","map":{"version":3,"names":["TemplatePortal","DatePipe","NgClass","NgFor","NgIf","NgTemplateOutlet","MatButtonModule","MatIconModule","MatTooltipModule","RouterLink","Subject","takeUntil","i0","ɵɵelementContainerStart","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelementContainerEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r1","unreadCount","ɵɵelementContainer","ɵɵtemplate","NotificationsComponent_ng_template_4_ng_container_11_ng_container_2_ng_container_1_ng_container_2_Template","ɵɵproperty","notification_r6","link","ɵɵsanitizeUrl","_r10","NotificationsComponent_ng_template_4_ng_container_11_ng_container_2_ng_container_2_ng_container_2_Template","NotificationsComponent_ng_template_4_ng_container_11_ng_container_2_ng_container_1_Template","NotificationsComponent_ng_template_4_ng_container_11_ng_container_2_ng_container_2_Template","useRouter","NotificationsComponent_ng_template_4_ng_container_11_ng_container_3_ng_container_2_Template","ɵɵelement","icon","image","title","ɵɵsanitizeHtml","description","NotificationsComponent_ng_template_4_ng_container_11_ng_template_9_ng_container_0_Template","NotificationsComponent_ng_template_4_ng_container_11_ng_template_9_ng_container_1_Template","NotificationsComponent_ng_template_4_ng_container_11_ng_template_9_ng_container_3_Template","NotificationsComponent_ng_template_4_ng_container_11_ng_template_9_ng_container_4_Template","ɵɵpipeBind2","time","NotificationsComponent_ng_template_4_ng_container_11_ng_container_2_Template","NotificationsComponent_ng_template_4_ng_container_11_ng_container_3_Template","ɵɵlistener","NotificationsComponent_ng_template_4_ng_container_11_Template_button_click_5_listener","restoredCtx","ɵɵrestoreView","_r29","$implicit","ctx_r28","ɵɵnextContext","ɵɵresetView","toggleRead","NotificationsComponent_ng_template_4_ng_container_11_Template_button_click_7_listener","ctx_r30","delete","NotificationsComponent_ng_template_4_ng_container_11_ng_template_9_Template","ɵɵtemplateRefExtractor","ɵɵpureFunction1","_c2","read","ɵɵpureFunction2","_c3","NotificationsComponent_ng_template_4_Template_button_click_3_listener","_r32","ctx_r31","closePanel","NotificationsComponent_ng_template_4_Template_button_click_8_listener","ctx_r33","markAllAsRead","NotificationsComponent_ng_template_4_ng_container_11_Template","NotificationsComponent_ng_template_4_ng_container_12_Template","ctx_r2","notifications","trackByFn","length","NotificationsComponent","constructor","_changeDetectorRef","_notificationsService","_overlay","_viewContainerRef","_unsubscribeAll","ngOnInit","notifications$","pipe","subscribe","_calculateUnreadCount","markForCheck","ngOnDestroy","next","complete","_overlayRef","dispose","openPanel","_notificationsPanel","_notificationsOrigin","_createOverlay","attach","detach","notification","update","id","index","item","create","hasBackdrop","backdropClass","scrollStrategy","scrollStrategies","block","positionStrategy","position","flexibleConnectedTo","_elementRef","nativeElement","withLockedPosition","withPush","withPositions","originX","originY","overlayX","overlayY","backdropClick","count","filter","_","ɵɵdirectiveInject","ChangeDetectorRef","i1","NotificationsService","i2","Overlay","ViewContainerRef","_2","selectors","viewQuery","NotificationsComponent_Query","rf","ctx","NotificationsComponent_Template_button_click_0_listener","NotificationsComponent_ng_container_2_Template","NotificationsComponent_ng_template_4_Template","i3","MatIconButton","i4","MatIcon","i5","MatTooltip","encapsulation","changeDetection"],"sources":["/Users/tusharphalke/Documents/Freelancing_Work/rrms_frontend/src/app/layout/common/notifications/notifications.component.ts","/Users/tusharphalke/Documents/Freelancing_Work/rrms_frontend/src/app/layout/common/notifications/notifications.component.html"],"sourcesContent":["import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { DatePipe, NgClass, NgFor, NgIf, NgTemplateOutlet } from '@angular/common';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit, TemplateRef, ViewChild, ViewContainerRef, ViewEncapsulation } from '@angular/core';\nimport { MatButton, MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { RouterLink } from '@angular/router';\nimport { NotificationsService } from 'app/layout/common/notifications/notifications.service';\nimport { Notification } from 'app/layout/common/notifications/notifications.types';\nimport { Subject, takeUntil } from 'rxjs';\n\n@Component({\n    selector       : 'notifications',\n    templateUrl    : './notifications.component.html',\n    encapsulation  : ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    exportAs       : 'notifications',\n    standalone     : true,\n    imports        : [MatButtonModule, NgIf, MatIconModule, MatTooltipModule, NgFor, NgClass, NgTemplateOutlet, RouterLink, DatePipe],\n})\nexport class NotificationsComponent implements OnInit, OnDestroy\n{\n    @ViewChild('notificationsOrigin') private _notificationsOrigin: MatButton;\n    @ViewChild('notificationsPanel') private _notificationsPanel: TemplateRef<any>;\n\n    notifications: Notification[];\n    unreadCount: number = 0;\n    private _overlayRef: OverlayRef;\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private _changeDetectorRef: ChangeDetectorRef,\n        private _notificationsService: NotificationsService,\n        private _overlay: Overlay,\n        private _viewContainerRef: ViewContainerRef,\n    )\n    {\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        // Subscribe to notification changes\n        this._notificationsService.notifications$\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe((notifications: Notification[]) =>\n            {\n                // Load the notifications\n                this.notifications = notifications;\n\n                // Calculate the unread count\n                this._calculateUnreadCount();\n\n                // Mark for check\n                this._changeDetectorRef.markForCheck();\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next(null);\n        this._unsubscribeAll.complete();\n\n        // Dispose the overlay\n        if ( this._overlayRef )\n        {\n            this._overlayRef.dispose();\n        }\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Open the notifications panel\n     */\n    openPanel(): void\n    {\n        // Return if the notifications panel or its origin is not defined\n        if ( !this._notificationsPanel || !this._notificationsOrigin )\n        {\n            return;\n        }\n\n        // Create the overlay if it doesn't exist\n        if ( !this._overlayRef )\n        {\n            this._createOverlay();\n        }\n\n        // Attach the portal to the overlay\n        this._overlayRef.attach(new TemplatePortal(this._notificationsPanel, this._viewContainerRef));\n    }\n\n    /**\n     * Close the notifications panel\n     */\n    closePanel(): void\n    {\n        this._overlayRef.detach();\n    }\n\n    /**\n     * Mark all notifications as read\n     */\n    markAllAsRead(): void\n    {\n        // Mark all as read\n        this._notificationsService.markAllAsRead().subscribe();\n    }\n\n    /**\n     * Toggle read status of the given notification\n     */\n    toggleRead(notification: Notification): void\n    {\n        // Toggle the read status\n        notification.read = !notification.read;\n\n        // Update the notification\n        this._notificationsService.update(notification.id, notification).subscribe();\n    }\n\n    /**\n     * Delete the given notification\n     */\n    delete(notification: Notification): void\n    {\n        // Delete the notification\n        this._notificationsService.delete(notification.id).subscribe();\n    }\n\n    /**\n     * Track by function for ngFor loops\n     *\n     * @param index\n     * @param item\n     */\n    trackByFn(index: number, item: any): any\n    {\n        return item.id || index;\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Private methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Create the overlay\n     */\n    private _createOverlay(): void\n    {\n        // Create the overlay\n        this._overlayRef = this._overlay.create({\n            hasBackdrop     : true,\n            backdropClass   : 'fuse-backdrop-on-mobile',\n            scrollStrategy  : this._overlay.scrollStrategies.block(),\n            positionStrategy: this._overlay.position()\n                .flexibleConnectedTo(this._notificationsOrigin._elementRef.nativeElement)\n                .withLockedPosition(true)\n                .withPush(true)\n                .withPositions([\n                    {\n                        originX : 'start',\n                        originY : 'bottom',\n                        overlayX: 'start',\n                        overlayY: 'top',\n                    },\n                    {\n                        originX : 'start',\n                        originY : 'top',\n                        overlayX: 'start',\n                        overlayY: 'bottom',\n                    },\n                    {\n                        originX : 'end',\n                        originY : 'bottom',\n                        overlayX: 'end',\n                        overlayY: 'top',\n                    },\n                    {\n                        originX : 'end',\n                        originY : 'top',\n                        overlayX: 'end',\n                        overlayY: 'bottom',\n                    },\n                ]),\n        });\n\n        // Detach the overlay from the portal on backdrop click\n        this._overlayRef.backdropClick().subscribe(() =>\n        {\n            this._overlayRef.detach();\n        });\n    }\n\n    /**\n     * Calculate the unread count\n     *\n     * @private\n     */\n    private _calculateUnreadCount(): void\n    {\n        let count = 0;\n\n        if ( this.notifications && this.notifications.length )\n        {\n            count = this.notifications.filter(notification => !notification.read).length;\n        }\n\n        this.unreadCount = count;\n    }\n}\n","<!-- Notifications toggle -->\n<button\n    mat-icon-button\n    (click)=\"openPanel()\"\n    #notificationsOrigin>\n    <ng-container *ngIf=\"unreadCount > 0\">\n        <span class=\"absolute top-0 right-0 left-0 flex items-center justify-center h-3\">\n            <span class=\"flex items-center justify-center shrink-0 min-w-4 h-4 px-1 ml-4 mt-2.5 rounded-full bg-teal-600 text-indigo-50 text-xs font-medium\">\n                {{unreadCount}}\n            </span>\n        </span>\n    </ng-container>\n    <mat-icon [svgIcon]=\"'heroicons_outline:bell'\"></mat-icon>\n</button>\n\n<!-- Notifications panel -->\n<ng-template #notificationsPanel>\n\n    <div class=\"fixed inset-0 sm:static sm:inset-auto flex flex-col sm:min-w-90 sm:w-90 sm:rounded-2xl overflow-hidden shadow-lg\">\n\n        <!-- Header -->\n        <div class=\"flex shrink-0 items-center py-4 pr-4 pl-6 bg-primary text-on-primary\">\n            <div class=\"sm:hidden -ml-1 mr-3\">\n                <button\n                    mat-icon-button\n                    (click)=\"closePanel()\">\n                    <mat-icon\n                        class=\"icon-size-5 text-current\"\n                        [svgIcon]=\"'heroicons_solid:x-mark'\"></mat-icon>\n                </button>\n            </div>\n            <div class=\"text-lg font-medium leading-10\">Notifications</div>\n            <div class=\"ml-auto\">\n                <button\n                    mat-icon-button\n                    [matTooltip]=\"'Mark all as read'\"\n                    [disabled]=\"unreadCount === 0\"\n                    (click)=\"markAllAsRead()\">\n                    <mat-icon\n                        class=\"icon-size-5 text-current\"\n                        [svgIcon]=\"'heroicons_solid:envelope-open'\"></mat-icon>\n                </button>\n            </div>\n        </div>\n\n        <!-- Content -->\n        <div class=\"relative flex flex-col flex-auto sm:max-h-120 divide-y overflow-y-auto bg-card\">\n            <!-- Notifications -->\n            <ng-container *ngFor=\"let notification of notifications; trackBy: trackByFn\">\n                <div\n                    class=\"flex group hover:bg-gray-50 dark:hover:bg-black dark:hover:bg-opacity-5\"\n                    [ngClass]=\"{'unread': !notification.read}\">\n\n                    <!-- Notification with a link -->\n                    <ng-container *ngIf=\"notification.link\">\n                        <!-- Normal links -->\n                        <ng-container *ngIf=\"!notification.useRouter\">\n                            <a\n                                class=\"flex flex-auto py-5 pl-6 cursor-pointer\"\n                                [href]=\"notification.link\">\n                                <ng-container *ngTemplateOutlet=\"notificationContent\"></ng-container>\n                            </a>\n                        </ng-container>\n                        <!-- Router links -->\n                        <ng-container *ngIf=\"notification.useRouter\">\n                            <a\n                                class=\"flex flex-auto py-5 pl-6 cursor-pointer\"\n                                [routerLink]=\"notification.link\">\n                                <ng-container *ngTemplateOutlet=\"notificationContent\"></ng-container>\n                            </a>\n                        </ng-container>\n                    </ng-container>\n\n                    <!-- Notification without a link -->\n                    <ng-container *ngIf=\"!notification.link\">\n                        <div class=\"flex flex-auto py-5 pl-6\">\n                            <ng-container *ngTemplateOutlet=\"notificationContent\"></ng-container>\n                        </div>\n                    </ng-container>\n\n                    <!-- Actions -->\n                    <div class=\"relative flex flex-col my-5 mr-6 ml-2\">\n                        <!-- Indicator -->\n                        <button\n                            class=\"w-6 h-6 min-h-6\"\n                            mat-icon-button\n                            (click)=\"toggleRead(notification)\"\n                            [matTooltip]=\"notification.read ? 'Mark as unread' : 'Mark as read'\">\n                            <span\n                                class=\"w-2 h-2 rounded-full\"\n                                [ngClass]=\"{'bg-gray-400 dark:bg-gray-500 sm:opacity-0 sm:group-hover:opacity-100': notification.read,\n                                            'bg-primary': !notification.read}\"></span>\n                        </button>\n                        <!-- Remove -->\n                        <button\n                            class=\"w-6 h-6 min-h-6 sm:opacity-0 sm:group-hover:opacity-100\"\n                            mat-icon-button\n                            (click)=\"delete(notification)\"\n                            [matTooltip]=\"'Remove'\">\n                            <mat-icon\n                                class=\"icon-size-4\"\n                                [svgIcon]=\"'heroicons_solid:x-mark'\"></mat-icon>\n                        </button>\n                    </div>\n\n                </div>\n\n                <!-- Notification content template -->\n                <ng-template #notificationContent>\n                    <!-- Icon -->\n                    <ng-container *ngIf=\"notification.icon && !notification.image\">\n                        <div class=\"flex shrink-0 items-center justify-center w-8 h-8 mr-4 rounded-full bg-gray-100 dark:bg-gray-700\">\n                            <mat-icon\n                                class=\"icon-size-5\"\n                                [svgIcon]=\"notification.icon\">\n                            </mat-icon>\n                        </div>\n                    </ng-container>\n                    <!-- Image -->\n                    <ng-container *ngIf=\"notification.image\">\n                        <img\n                            class=\"shrink-0 w-8 h-8 mr-4 rounded-full overflow-hidden object-cover object-center\"\n                            [src]=\"notification.image\"\n                            [alt]=\"'Notification image'\">\n                    </ng-container>\n                    <!-- Title, description & time -->\n                    <div class=\"flex flex-col flex-auto\">\n                        <ng-container *ngIf=\"notification.title\">\n                            <div\n                                class=\"font-semibold line-clamp-1\"\n                                [innerHTML]=\"notification.title\"></div>\n                        </ng-container>\n                        <ng-container *ngIf=\"notification.description\">\n                            <div\n                                class=\"line-clamp-2\"\n                                [innerHTML]=\"notification.description\"></div>\n                        </ng-container>\n                        <div class=\"mt-2 text-sm leading-none text-secondary\">\n                            {{notification.time | date:'MMM dd, h:mm a'}}\n                        </div>\n                    </div>\n                </ng-template>\n            </ng-container>\n\n            <!-- No notifications -->\n            <ng-container *ngIf=\"!notifications || !notifications.length\">\n                <div class=\"flex flex-col flex-auto items-center justify-center sm:justify-start py-12 px-8\">\n                    <div class=\"flex flex-0 items-center justify-center w-14 h-14 rounded-full bg-primary-100 dark:bg-primary-600\">\n                        <mat-icon\n                            class=\"text-primary-700 dark:text-primary-50\"\n                            [svgIcon]=\"'heroicons_outline:bell'\"></mat-icon>\n                    </div>\n                    <div class=\"mt-5 text-2xl font-semibold tracking-tight\">No notifications</div>\n                    <div class=\"w-full max-w-60 mt-1 text-md text-center text-secondary\">When you have notifications, they will appear here.</div>\n                </div>\n            </ng-container>\n\n        </div>\n\n    </div>\n\n</ng-template>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}