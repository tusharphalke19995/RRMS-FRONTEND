{"ast":null,"code":"import { animate, style } from '@angular/animations';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/animations\";\nimport * as i2 from \"@fuse/components/drawer/drawer.service\";\nimport * as i3 from \"@fuse/services/utils/utils.service\";\nconst _c0 = [\"*\"];\nexport class FuseDrawerComponent {\n  /**\n   * Constructor\n   */\n  constructor(_animationBuilder, _elementRef, _renderer2, _fuseDrawerService, _fuseUtilsService) {\n    this._animationBuilder = _animationBuilder;\n    this._elementRef = _elementRef;\n    this._renderer2 = _renderer2;\n    this._fuseDrawerService = _fuseDrawerService;\n    this._fuseUtilsService = _fuseUtilsService;\n    /* eslint-enable @typescript-eslint/naming-convention */\n    this.fixed = false;\n    this.mode = 'side';\n    this.name = this._fuseUtilsService.randomId();\n    this.opened = false;\n    this.position = 'left';\n    this.transparentOverlay = false;\n    this.fixedChanged = new EventEmitter();\n    this.modeChanged = new EventEmitter();\n    this.openedChanged = new EventEmitter();\n    this.positionChanged = new EventEmitter();\n    this._animationsEnabled = false;\n    this._hovered = false;\n    this._handleOverlayClick = () => {\n      this.close();\n    };\n  }\n  // -----------------------------------------------------------------------------------------------------\n  // @ Accessors\n  // -----------------------------------------------------------------------------------------------------\n  /**\n   * Host binding for component classes\n   */\n  get classList() {\n    /* eslint-disable @typescript-eslint/naming-convention */\n    return {\n      'fuse-drawer-animations-enabled': this._animationsEnabled,\n      'fuse-drawer-fixed': this.fixed,\n      'fuse-drawer-hover': this._hovered,\n      [`fuse-drawer-mode-${this.mode}`]: true,\n      'fuse-drawer-opened': this.opened,\n      [`fuse-drawer-position-${this.position}`]: true\n    };\n    /* eslint-enable @typescript-eslint/naming-convention */\n  }\n  /**\n   * Host binding for component inline styles\n   */\n  get styleList() {\n    return {\n      'visibility': this.opened ? 'visible' : 'hidden'\n    };\n  }\n  // -----------------------------------------------------------------------------------------------------\n  // @ Decorated methods\n  // -----------------------------------------------------------------------------------------------------\n  /**\n   * On mouseenter\n   *\n   * @private\n   */\n  _onMouseenter() {\n    // Enable the animations\n    this._enableAnimations();\n    // Set the hovered\n    this._hovered = true;\n  }\n  /**\n   * On mouseleave\n   *\n   * @private\n   */\n  _onMouseleave() {\n    // Enable the animations\n    this._enableAnimations();\n    // Set the hovered\n    this._hovered = false;\n  }\n  // -----------------------------------------------------------------------------------------------------\n  // @ Lifecycle hooks\n  // -----------------------------------------------------------------------------------------------------\n  /**\n   * On changes\n   *\n   * @param changes\n   */\n  ngOnChanges(changes) {\n    // Fixed\n    if ('fixed' in changes) {\n      // Coerce the value to a boolean\n      this.fixed = coerceBooleanProperty(changes.fixed.currentValue);\n      // Execute the observable\n      this.fixedChanged.next(this.fixed);\n    }\n    // Mode\n    if ('mode' in changes) {\n      // Get the previous and current values\n      const previousMode = changes.mode.previousValue;\n      const currentMode = changes.mode.currentValue;\n      // Disable the animations\n      this._disableAnimations();\n      // If the mode changes: 'over -> side'\n      if (previousMode === 'over' && currentMode === 'side') {\n        // Hide the overlay\n        this._hideOverlay();\n      }\n      // If the mode changes: 'side -> over'\n      if (previousMode === 'side' && currentMode === 'over') {\n        // If the drawer is opened\n        if (this.opened) {\n          // Show the overlay\n          this._showOverlay();\n        }\n      }\n      // Execute the observable\n      this.modeChanged.next(currentMode);\n      // Enable the animations after a delay\n      // The delay must be bigger than the current transition-duration\n      // to make sure nothing will be animated while the mode is changing\n      setTimeout(() => {\n        this._enableAnimations();\n      }, 500);\n    }\n    // Opened\n    if ('opened' in changes) {\n      // Coerce the value to a boolean\n      const open = coerceBooleanProperty(changes.opened.currentValue);\n      // Open/close the drawer\n      this._toggleOpened(open);\n    }\n    // Position\n    if ('position' in changes) {\n      // Execute the observable\n      this.positionChanged.next(this.position);\n    }\n    // Transparent overlay\n    if ('transparentOverlay' in changes) {\n      // Coerce the value to a boolean\n      this.transparentOverlay = coerceBooleanProperty(changes.transparentOverlay.currentValue);\n    }\n  }\n  /**\n   * On init\n   */\n  ngOnInit() {\n    // Register the drawer\n    this._fuseDrawerService.registerComponent(this.name, this);\n  }\n  /**\n   * On destroy\n   */\n  ngOnDestroy() {\n    // Finish the animation\n    if (this._player) {\n      this._player.finish();\n    }\n    // Deregister the drawer from the registry\n    this._fuseDrawerService.deregisterComponent(this.name);\n  }\n  // -----------------------------------------------------------------------------------------------------\n  // @ Public methods\n  // -----------------------------------------------------------------------------------------------------\n  /**\n   * Open the drawer\n   */\n  open() {\n    // Return if the drawer has already opened\n    if (this.opened) {\n      return;\n    }\n    // Open the drawer\n    this._toggleOpened(true);\n  }\n  /**\n   * Close the drawer\n   */\n  close() {\n    // Return if the drawer has already closed\n    if (!this.opened) {\n      return;\n    }\n    // Close the drawer\n    this._toggleOpened(false);\n  }\n  /**\n   * Toggle the drawer\n   */\n  toggle() {\n    if (this.opened) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n  // -----------------------------------------------------------------------------------------------------\n  // @ Private methods\n  // -----------------------------------------------------------------------------------------------------\n  /**\n   * Enable the animations\n   *\n   * @private\n   */\n  _enableAnimations() {\n    // Return if the animations are already enabled\n    if (this._animationsEnabled) {\n      return;\n    }\n    // Enable the animations\n    this._animationsEnabled = true;\n  }\n  /**\n   * Disable the animations\n   *\n   * @private\n   */\n  _disableAnimations() {\n    // Return if the animations are already disabled\n    if (!this._animationsEnabled) {\n      return;\n    }\n    // Disable the animations\n    this._animationsEnabled = false;\n  }\n  /**\n   * Show the backdrop\n   *\n   * @private\n   */\n  _showOverlay() {\n    // Create the backdrop element\n    this._overlay = this._renderer2.createElement('div');\n    // Add a class to the backdrop element\n    this._overlay.classList.add('fuse-drawer-overlay');\n    // Add a class depending on the fixed option\n    if (this.fixed) {\n      this._overlay.classList.add('fuse-drawer-overlay-fixed');\n    }\n    // Add a class depending on the transparentOverlay option\n    if (this.transparentOverlay) {\n      this._overlay.classList.add('fuse-drawer-overlay-transparent');\n    }\n    // Append the backdrop to the parent of the drawer\n    this._renderer2.appendChild(this._elementRef.nativeElement.parentElement, this._overlay);\n    // Create enter animation and attach it to the player\n    this._player = this._animationBuilder.build([style({\n      opacity: 0\n    }), animate('300ms cubic-bezier(0.25, 0.8, 0.25, 1)', style({\n      opacity: 1\n    }))]).create(this._overlay);\n    // Play the animation\n    this._player.play();\n    // Add an event listener to the overlay\n    this._overlay.addEventListener('click', this._handleOverlayClick);\n  }\n  /**\n   * Hide the backdrop\n   *\n   * @private\n   */\n  _hideOverlay() {\n    if (!this._overlay) {\n      return;\n    }\n    // Create the leave animation and attach it to the player\n    this._player = this._animationBuilder.build([animate('300ms cubic-bezier(0.25, 0.8, 0.25, 1)', style({\n      opacity: 0\n    }))]).create(this._overlay);\n    // Play the animation\n    this._player.play();\n    // Once the animation is done...\n    this._player.onDone(() => {\n      // If the overlay still exists...\n      if (this._overlay) {\n        // Remove the event listener\n        this._overlay.removeEventListener('click', this._handleOverlayClick);\n        // Remove the overlay\n        this._overlay.parentNode.removeChild(this._overlay);\n        this._overlay = null;\n      }\n    });\n  }\n  /**\n   * Open/close the drawer\n   *\n   * @param open\n   * @private\n   */\n  _toggleOpened(open) {\n    // Set the opened\n    this.opened = open;\n    // Enable the animations\n    this._enableAnimations();\n    // If the mode is 'over'\n    if (this.mode === 'over') {\n      // If the drawer opens, show the overlay\n      if (open) {\n        this._showOverlay();\n      }\n      // Otherwise, close the overlay\n      else {\n        this._hideOverlay();\n      }\n    }\n    // Execute the observable\n    this.openedChanged.next(open);\n  }\n  static #_ = this.ɵfac = function FuseDrawerComponent_Factory(t) {\n    return new (t || FuseDrawerComponent)(i0.ɵɵdirectiveInject(i1.AnimationBuilder), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i2.FuseDrawerService), i0.ɵɵdirectiveInject(i3.FuseUtilsService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FuseDrawerComponent,\n    selectors: [[\"fuse-drawer\"]],\n    hostVars: 4,\n    hostBindings: function FuseDrawerComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"mouseenter\", function FuseDrawerComponent_mouseenter_HostBindingHandler() {\n          return ctx._onMouseenter();\n        })(\"mouseleave\", function FuseDrawerComponent_mouseleave_HostBindingHandler() {\n          return ctx._onMouseleave();\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵstyleMap(ctx.styleList);\n        i0.ɵɵclassMap(ctx.classList);\n      }\n    },\n    inputs: {\n      fixed: \"fixed\",\n      mode: \"mode\",\n      name: \"name\",\n      opened: \"opened\",\n      position: \"position\",\n      transparentOverlay: \"transparentOverlay\"\n    },\n    outputs: {\n      fixedChanged: \"fixedChanged\",\n      modeChanged: \"modeChanged\",\n      openedChanged: \"openedChanged\",\n      positionChanged: \"positionChanged\"\n    },\n    exportAs: [\"fuseDrawer\"],\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    ngContentSelectors: _c0,\n    decls: 2,\n    vars: 0,\n    consts: [[1, \"fuse-drawer-content\"]],\n    template: function FuseDrawerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵprojection(1);\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"/* Variables */\\n:root {\\n  --fuse-drawer-width: 320px;\\n}\\n\\nfuse-drawer {\\n  position: relative;\\n  display: flex;\\n  flex-direction: column;\\n  flex: 1 1 auto;\\n  width: var(--fuse-drawer-width);\\n  min-width: var(--fuse-drawer-width);\\n  max-width: var(--fuse-drawer-width);\\n  z-index: 300;\\n  box-shadow: 0 2px 8px 0 rgba(0, 0, 0, 0.35);\\n  --tw-bg-opacity: 1;\\n  background-color: rgba(var(--fuse-bg-card-rgb), var(--tw-bg-opacity));\\n  /* Animations */\\n  /* Over mode */\\n  /* Left position */\\n  /* Right position */\\n  /* Content */\\n}\\nfuse-drawer.fuse-drawer-animations-enabled {\\n  transition-duration: 400ms;\\n  transition-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1);\\n  transition-property: visibility, margin-left, margin-right, transform, width, max-width, min-width;\\n}\\nfuse-drawer.fuse-drawer-animations-enabled .fuse-drawer-content {\\n  transition-duration: 400ms;\\n  transition-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1);\\n  transition-property: width, max-width, min-width;\\n}\\nfuse-drawer.fuse-drawer-mode-over {\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  /* Fixed mode */\\n}\\nfuse-drawer.fuse-drawer-mode-over.fuse-drawer-fixed {\\n  position: fixed;\\n}\\nfuse-drawer.fuse-drawer-position-left {\\n  /* Side mode */\\n  /* Over mode */\\n  /* Content */\\n}\\nfuse-drawer.fuse-drawer-position-left.fuse-drawer-mode-side {\\n  margin-left: calc(var(--fuse-drawer-width) * -1);\\n}\\nfuse-drawer.fuse-drawer-position-left.fuse-drawer-mode-side.fuse-drawer-opened {\\n  margin-left: 0;\\n}\\nfuse-drawer.fuse-drawer-position-left.fuse-drawer-mode-over {\\n  left: 0;\\n  transform: translate3d(-100%, 0, 0);\\n}\\nfuse-drawer.fuse-drawer-position-left.fuse-drawer-mode-over.fuse-drawer-opened {\\n  transform: translate3d(0, 0, 0);\\n}\\nfuse-drawer.fuse-drawer-position-left .fuse-drawer-content {\\n  left: 0;\\n}\\nfuse-drawer.fuse-drawer-position-right {\\n  /* Side mode */\\n  /* Over mode */\\n  /* Content */\\n}\\nfuse-drawer.fuse-drawer-position-right.fuse-drawer-mode-side {\\n  margin-right: calc(var(--fuse-drawer-width) * -1);\\n}\\nfuse-drawer.fuse-drawer-position-right.fuse-drawer-mode-side.fuse-drawer-opened {\\n  margin-right: 0;\\n}\\nfuse-drawer.fuse-drawer-position-right.fuse-drawer-mode-over {\\n  right: 0;\\n  transform: translate3d(100%, 0, 0);\\n}\\nfuse-drawer.fuse-drawer-position-right.fuse-drawer-mode-over.fuse-drawer-opened {\\n  transform: translate3d(0, 0, 0);\\n}\\nfuse-drawer.fuse-drawer-position-right .fuse-drawer-content {\\n  right: 0;\\n}\\nfuse-drawer .fuse-drawer-content {\\n  position: absolute;\\n  display: flex;\\n  flex: 1 1 auto;\\n  top: 0;\\n  bottom: 0;\\n  width: 100%;\\n  height: 100%;\\n  overflow: hidden;\\n  --tw-bg-opacity: 1;\\n  background-color: rgba(var(--fuse-bg-card-rgb), var(--tw-bg-opacity));\\n}\\n\\n/* Overlay */\\n.fuse-drawer-overlay {\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n  z-index: 299;\\n  opacity: 1;\\n  background-color: rgba(0, 0, 0, 0.6);\\n  /* Fixed mode */\\n  /* Transparent overlay */\\n}\\n.fuse-drawer-overlay.fuse-drawer-overlay-fixed {\\n  position: fixed;\\n}\\n.fuse-drawer-overlay.fuse-drawer-overlay-transparent {\\n  background-color: transparent;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9AZnVzZS9jb21wb25lbnRzL2RyYXdlci9kcmF3ZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsY0FBQTtBQUNBO0VBQ0ksMEJBQUE7QUFDSjs7QUFFQTtFQUNJLGtCQUFBO0VBQ0EsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsY0FBQTtFQUNBLCtCQUFBO0VBQ0EsbUNBQUE7RUFDQSxtQ0FBQTtFQUNBLFlBQUE7RUFDQSwyQ0FBQTtFQUNBLGtCQUFBO0VBQUEscUVBQUE7RUFFQSxlQUFBO0VBYUEsY0FBQTtFQVlBLGtCQUFBO0VBNEJBLG1CQUFBO0VBNEJBLFlBQUE7QUE3RUo7QUFISTtFQUNJLDBCQUFBO0VBQ0EsNERBQUE7RUFDQSxrR0FBQTtBQUtSO0FBSFE7RUFDSSwwQkFBQTtFQUNBLDREQUFBO0VBQ0EsZ0RBQUE7QUFLWjtBQUFJO0VBQ0ksa0JBQUE7RUFDQSxNQUFBO0VBQ0EsU0FBQTtFQUVBLGVBQUE7QUFDUjtBQUFRO0VBQ0ksZUFBQTtBQUVaO0FBR0k7RUFFSSxjQUFBO0VBU0EsY0FBQTtFQVVBLFlBQUE7QUFuQlI7QUFDUTtFQUNJLGdEQUFBO0FBQ1o7QUFDWTtFQUNJLGNBQUE7QUFDaEI7QUFJUTtFQUNJLE9BQUE7RUFDQSxtQ0FBQTtBQUZaO0FBSVk7RUFDSSwrQkFBQTtBQUZoQjtBQU9RO0VBQ0ksT0FBQTtBQUxaO0FBVUk7RUFFSSxjQUFBO0VBU0EsY0FBQTtFQVVBLFlBQUE7QUExQlI7QUFRUTtFQUNJLGlEQUFBO0FBTlo7QUFRWTtFQUNJLGVBQUE7QUFOaEI7QUFXUTtFQUNJLFFBQUE7RUFDQSxrQ0FBQTtBQVRaO0FBV1k7RUFDSSwrQkFBQTtBQVRoQjtBQWNRO0VBQ0ksUUFBQTtBQVpaO0FBaUJJO0VBQ0ksa0JBQUE7RUFDQSxhQUFBO0VBQ0EsY0FBQTtFQUNBLE1BQUE7RUFDQSxTQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7RUFDQSxnQkFBQTtFQUNBLGtCQUFBO0VBQUEscUVBQUE7QUFmUjs7QUFtQkEsWUFBQTtBQUNBO0VBQ0ksa0JBQUE7RUFDQSxNQUFBO0VBQ0EsU0FBQTtFQUNBLE9BQUE7RUFDQSxRQUFBO0VBQ0EsWUFBQTtFQUNBLFVBQUE7RUFDQSxvQ0FBQTtFQUVBLGVBQUE7RUFLQSx3QkFBQTtBQXJCSjtBQWlCSTtFQUNJLGVBQUE7QUFmUjtBQW1CSTtFQUNJLDZCQUFBO0FBakJSIiwic291cmNlc0NvbnRlbnQiOlsiLyogVmFyaWFibGVzICovXG46cm9vdCB7XG4gICAgLS1mdXNlLWRyYXdlci13aWR0aDogMzIwcHg7XG59XG5cbmZ1c2UtZHJhd2VyIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGZsZXg6IDEgMSBhdXRvO1xuICAgIHdpZHRoOiB2YXIoLS1mdXNlLWRyYXdlci13aWR0aCk7XG4gICAgbWluLXdpZHRoOiB2YXIoLS1mdXNlLWRyYXdlci13aWR0aCk7XG4gICAgbWF4LXdpZHRoOiB2YXIoLS1mdXNlLWRyYXdlci13aWR0aCk7XG4gICAgei1pbmRleDogMzAwO1xuICAgIGJveC1zaGFkb3c6IDAgMnB4IDhweCAwIHJnYmEoMCwgMCwgMCwgLjM1KTtcbiAgICBAYXBwbHkgYmctY2FyZDtcblxuICAgIC8qIEFuaW1hdGlvbnMgKi9cbiAgICAmLmZ1c2UtZHJhd2VyLWFuaW1hdGlvbnMtZW5hYmxlZCB7XG4gICAgICAgIHRyYW5zaXRpb24tZHVyYXRpb246IDQwMG1zO1xuICAgICAgICB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjogY3ViaWMtYmV6aWVyKDAuMjUsIDAuOCwgMC4yNSwgMSk7XG4gICAgICAgIHRyYW5zaXRpb24tcHJvcGVydHk6IHZpc2liaWxpdHksIG1hcmdpbi1sZWZ0LCBtYXJnaW4tcmlnaHQsIHRyYW5zZm9ybSwgd2lkdGgsIG1heC13aWR0aCwgbWluLXdpZHRoO1xuXG4gICAgICAgIC5mdXNlLWRyYXdlci1jb250ZW50IHtcbiAgICAgICAgICAgIHRyYW5zaXRpb24tZHVyYXRpb246IDQwMG1zO1xuICAgICAgICAgICAgdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb246IGN1YmljLWJlemllcigwLjI1LCAwLjgsIDAuMjUsIDEpO1xuICAgICAgICAgICAgdHJhbnNpdGlvbi1wcm9wZXJ0eTogd2lkdGgsIG1heC13aWR0aCwgbWluLXdpZHRoO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyogT3ZlciBtb2RlICovXG4gICAgJi5mdXNlLWRyYXdlci1tb2RlLW92ZXIge1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHRvcDogMDtcbiAgICAgICAgYm90dG9tOiAwO1xuXG4gICAgICAgIC8qIEZpeGVkIG1vZGUgKi9cbiAgICAgICAgJi5mdXNlLWRyYXdlci1maXhlZCB7XG4gICAgICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKiBMZWZ0IHBvc2l0aW9uICovXG4gICAgJi5mdXNlLWRyYXdlci1wb3NpdGlvbi1sZWZ0IHtcblxuICAgICAgICAvKiBTaWRlIG1vZGUgKi9cbiAgICAgICAgJi5mdXNlLWRyYXdlci1tb2RlLXNpZGUge1xuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IGNhbGModmFyKC0tZnVzZS1kcmF3ZXItd2lkdGgpICogLTEpO1xuXG4gICAgICAgICAgICAmLmZ1c2UtZHJhd2VyLW9wZW5lZCB7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAvKiBPdmVyIG1vZGUgKi9cbiAgICAgICAgJi5mdXNlLWRyYXdlci1tb2RlLW92ZXIge1xuICAgICAgICAgICAgbGVmdDogMDtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoLTEwMCUsIDAsIDApO1xuXG4gICAgICAgICAgICAmLmZ1c2UtZHJhd2VyLW9wZW5lZCB7XG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8qIENvbnRlbnQgKi9cbiAgICAgICAgLmZ1c2UtZHJhd2VyLWNvbnRlbnQge1xuICAgICAgICAgICAgbGVmdDogMDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qIFJpZ2h0IHBvc2l0aW9uICovXG4gICAgJi5mdXNlLWRyYXdlci1wb3NpdGlvbi1yaWdodCB7XG5cbiAgICAgICAgLyogU2lkZSBtb2RlICovXG4gICAgICAgICYuZnVzZS1kcmF3ZXItbW9kZS1zaWRlIHtcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogY2FsYyh2YXIoLS1mdXNlLWRyYXdlci13aWR0aCkgKiAtMSk7XG5cbiAgICAgICAgICAgICYuZnVzZS1kcmF3ZXItb3BlbmVkIHtcbiAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAvKiBPdmVyIG1vZGUgKi9cbiAgICAgICAgJi5mdXNlLWRyYXdlci1tb2RlLW92ZXIge1xuICAgICAgICAgICAgcmlnaHQ6IDA7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDEwMCUsIDAsIDApO1xuXG4gICAgICAgICAgICAmLmZ1c2UtZHJhd2VyLW9wZW5lZCB7XG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8qIENvbnRlbnQgKi9cbiAgICAgICAgLmZ1c2UtZHJhd2VyLWNvbnRlbnQge1xuICAgICAgICAgICAgcmlnaHQ6IDA7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKiBDb250ZW50ICovXG4gICAgLmZ1c2UtZHJhd2VyLWNvbnRlbnQge1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGZsZXg6IDEgMSBhdXRvO1xuICAgICAgICB0b3A6IDA7XG4gICAgICAgIGJvdHRvbTogMDtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgICAgQGFwcGx5IGJnLWNhcmQ7XG4gICAgfVxufVxuXG4vKiBPdmVybGF5ICovXG4uZnVzZS1kcmF3ZXItb3ZlcmxheSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMDtcbiAgICBib3R0b206IDA7XG4gICAgbGVmdDogMDtcbiAgICByaWdodDogMDtcbiAgICB6LWluZGV4OiAyOTk7XG4gICAgb3BhY2l0eTogMTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNik7XG5cbiAgICAvKiBGaXhlZCBtb2RlICovXG4gICAgJi5mdXNlLWRyYXdlci1vdmVybGF5LWZpeGVkIHtcbiAgICAgICAgcG9zaXRpb246IGZpeGVkO1xuICAgIH1cblxuICAgIC8qIFRyYW5zcGFyZW50IG92ZXJsYXkgKi9cbiAgICAmLmZ1c2UtZHJhd2VyLW92ZXJsYXktdHJhbnNwYXJlbnQge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"],\n    encapsulation: 2\n  });\n}","map":{"version":3,"names":["animate","style","coerceBooleanProperty","EventEmitter","FuseDrawerComponent","constructor","_animationBuilder","_elementRef","_renderer2","_fuseDrawerService","_fuseUtilsService","fixed","mode","name","randomId","opened","position","transparentOverlay","fixedChanged","modeChanged","openedChanged","positionChanged","_animationsEnabled","_hovered","_handleOverlayClick","close","classList","styleList","_onMouseenter","_enableAnimations","_onMouseleave","ngOnChanges","changes","currentValue","next","previousMode","previousValue","currentMode","_disableAnimations","_hideOverlay","_showOverlay","setTimeout","open","_toggleOpened","ngOnInit","registerComponent","ngOnDestroy","_player","finish","deregisterComponent","toggle","_overlay","createElement","add","appendChild","nativeElement","parentElement","build","opacity","create","play","addEventListener","onDone","removeEventListener","parentNode","removeChild","_","i0","ɵɵdirectiveInject","i1","AnimationBuilder","ElementRef","Renderer2","i2","FuseDrawerService","i3","FuseUtilsService","_2","selectors","hostVars","hostBindings","FuseDrawerComponent_HostBindings","rf","ctx","FuseDrawerComponent_mouseleave_HostBindingHandler","ɵɵelementStart","ɵɵprojection","ɵɵelementEnd"],"sources":["/Users/tusharphalke/Documents/Freelancing_Work/rrms_frontend/src/@fuse/components/drawer/drawer.component.ts","/Users/tusharphalke/Documents/Freelancing_Work/rrms_frontend/src/@fuse/components/drawer/drawer.component.html"],"sourcesContent":["import { animate, AnimationBuilder, AnimationPlayer, style } from '@angular/animations';\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Component, ElementRef, EventEmitter, HostBinding, HostListener, Input, OnChanges, OnDestroy, OnInit, Output, Renderer2, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { FuseDrawerService } from '@fuse/components/drawer/drawer.service';\nimport { FuseDrawerMode, FuseDrawerPosition } from '@fuse/components/drawer/drawer.types';\nimport { FuseUtilsService } from '@fuse/services/utils/utils.service';\n\n@Component({\n    selector     : 'fuse-drawer',\n    templateUrl  : './drawer.component.html',\n    styleUrls    : ['./drawer.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    exportAs     : 'fuseDrawer',\n    standalone   : true,\n})\nexport class FuseDrawerComponent implements OnChanges, OnInit, OnDestroy\n{\n    /* eslint-disable @typescript-eslint/naming-convention */\n    static ngAcceptInputType_fixed: BooleanInput;\n    static ngAcceptInputType_opened: BooleanInput;\n    static ngAcceptInputType_transparentOverlay: BooleanInput;\n    /* eslint-enable @typescript-eslint/naming-convention */\n\n    @Input() fixed: boolean = false;\n    @Input() mode: FuseDrawerMode = 'side';\n    @Input() name: string = this._fuseUtilsService.randomId();\n    @Input() opened: boolean = false;\n    @Input() position: FuseDrawerPosition = 'left';\n    @Input() transparentOverlay: boolean = false;\n    @Output() readonly fixedChanged: EventEmitter<boolean> = new EventEmitter<boolean>();\n    @Output() readonly modeChanged: EventEmitter<FuseDrawerMode> = new EventEmitter<FuseDrawerMode>();\n    @Output() readonly openedChanged: EventEmitter<boolean> = new EventEmitter<boolean>();\n    @Output() readonly positionChanged: EventEmitter<FuseDrawerPosition> = new EventEmitter<FuseDrawerPosition>();\n\n    private _animationsEnabled: boolean = false;\n    private readonly _handleOverlayClick: any;\n    private _hovered: boolean = false;\n    private _overlay: HTMLElement;\n    private _player: AnimationPlayer;\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private _animationBuilder: AnimationBuilder,\n        private _elementRef: ElementRef,\n        private _renderer2: Renderer2,\n        private _fuseDrawerService: FuseDrawerService,\n        private _fuseUtilsService: FuseUtilsService,\n    )\n    {\n        this._handleOverlayClick = (): void =>\n        {\n            this.close();\n        };\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Accessors\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Host binding for component classes\n     */\n    @HostBinding('class') get classList(): any\n    {\n        /* eslint-disable @typescript-eslint/naming-convention */\n        return {\n            'fuse-drawer-animations-enabled'         : this._animationsEnabled,\n            'fuse-drawer-fixed'                      : this.fixed,\n            'fuse-drawer-hover'                      : this._hovered,\n            [`fuse-drawer-mode-${this.mode}`]        : true,\n            'fuse-drawer-opened'                     : this.opened,\n            [`fuse-drawer-position-${this.position}`]: true,\n        };\n        /* eslint-enable @typescript-eslint/naming-convention */\n    }\n\n    /**\n     * Host binding for component inline styles\n     */\n    @HostBinding('style') get styleList(): any\n    {\n        return {\n            'visibility': this.opened ? 'visible' : 'hidden',\n        };\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Decorated methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On mouseenter\n     *\n     * @private\n     */\n    @HostListener('mouseenter')\n    private _onMouseenter(): void\n    {\n        // Enable the animations\n        this._enableAnimations();\n\n        // Set the hovered\n        this._hovered = true;\n    }\n\n    /**\n     * On mouseleave\n     *\n     * @private\n     */\n    @HostListener('mouseleave')\n    private _onMouseleave(): void\n    {\n        // Enable the animations\n        this._enableAnimations();\n\n        // Set the hovered\n        this._hovered = false;\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On changes\n     *\n     * @param changes\n     */\n    ngOnChanges(changes: SimpleChanges): void\n    {\n        // Fixed\n        if ( 'fixed' in changes )\n        {\n            // Coerce the value to a boolean\n            this.fixed = coerceBooleanProperty(changes.fixed.currentValue);\n\n            // Execute the observable\n            this.fixedChanged.next(this.fixed);\n        }\n\n        // Mode\n        if ( 'mode' in changes )\n        {\n            // Get the previous and current values\n            const previousMode = changes.mode.previousValue;\n            const currentMode = changes.mode.currentValue;\n\n            // Disable the animations\n            this._disableAnimations();\n\n            // If the mode changes: 'over -> side'\n            if ( previousMode === 'over' && currentMode === 'side' )\n            {\n                // Hide the overlay\n                this._hideOverlay();\n            }\n\n            // If the mode changes: 'side -> over'\n            if ( previousMode === 'side' && currentMode === 'over' )\n            {\n                // If the drawer is opened\n                if ( this.opened )\n                {\n                    // Show the overlay\n                    this._showOverlay();\n                }\n            }\n\n            // Execute the observable\n            this.modeChanged.next(currentMode);\n\n            // Enable the animations after a delay\n            // The delay must be bigger than the current transition-duration\n            // to make sure nothing will be animated while the mode is changing\n            setTimeout(() =>\n            {\n                this._enableAnimations();\n            }, 500);\n        }\n\n        // Opened\n        if ( 'opened' in changes )\n        {\n            // Coerce the value to a boolean\n            const open = coerceBooleanProperty(changes.opened.currentValue);\n\n            // Open/close the drawer\n            this._toggleOpened(open);\n        }\n\n        // Position\n        if ( 'position' in changes )\n        {\n            // Execute the observable\n            this.positionChanged.next(this.position);\n        }\n\n        // Transparent overlay\n        if ( 'transparentOverlay' in changes )\n        {\n            // Coerce the value to a boolean\n            this.transparentOverlay = coerceBooleanProperty(changes.transparentOverlay.currentValue);\n        }\n    }\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        // Register the drawer\n        this._fuseDrawerService.registerComponent(this.name, this);\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Finish the animation\n        if ( this._player )\n        {\n            this._player.finish();\n        }\n\n        // Deregister the drawer from the registry\n        this._fuseDrawerService.deregisterComponent(this.name);\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Open the drawer\n     */\n    open(): void\n    {\n        // Return if the drawer has already opened\n        if ( this.opened )\n        {\n            return;\n        }\n\n        // Open the drawer\n        this._toggleOpened(true);\n    }\n\n    /**\n     * Close the drawer\n     */\n    close(): void\n    {\n        // Return if the drawer has already closed\n        if ( !this.opened )\n        {\n            return;\n        }\n\n        // Close the drawer\n        this._toggleOpened(false);\n    }\n\n    /**\n     * Toggle the drawer\n     */\n    toggle(): void\n    {\n        if ( this.opened )\n        {\n            this.close();\n        }\n        else\n        {\n            this.open();\n        }\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Private methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Enable the animations\n     *\n     * @private\n     */\n    private _enableAnimations(): void\n    {\n        // Return if the animations are already enabled\n        if ( this._animationsEnabled )\n        {\n            return;\n        }\n\n        // Enable the animations\n        this._animationsEnabled = true;\n    }\n\n    /**\n     * Disable the animations\n     *\n     * @private\n     */\n    private _disableAnimations(): void\n    {\n        // Return if the animations are already disabled\n        if ( !this._animationsEnabled )\n        {\n            return;\n        }\n\n        // Disable the animations\n        this._animationsEnabled = false;\n    }\n\n    /**\n     * Show the backdrop\n     *\n     * @private\n     */\n    private _showOverlay(): void\n    {\n        // Create the backdrop element\n        this._overlay = this._renderer2.createElement('div');\n\n        // Add a class to the backdrop element\n        this._overlay.classList.add('fuse-drawer-overlay');\n\n        // Add a class depending on the fixed option\n        if ( this.fixed )\n        {\n            this._overlay.classList.add('fuse-drawer-overlay-fixed');\n        }\n\n        // Add a class depending on the transparentOverlay option\n        if ( this.transparentOverlay )\n        {\n            this._overlay.classList.add('fuse-drawer-overlay-transparent');\n        }\n\n        // Append the backdrop to the parent of the drawer\n        this._renderer2.appendChild(this._elementRef.nativeElement.parentElement, this._overlay);\n\n        // Create enter animation and attach it to the player\n        this._player = this._animationBuilder.build([\n            style({opacity: 0}),\n            animate('300ms cubic-bezier(0.25, 0.8, 0.25, 1)', style({opacity: 1})),\n        ]).create(this._overlay);\n\n        // Play the animation\n        this._player.play();\n\n        // Add an event listener to the overlay\n        this._overlay.addEventListener('click', this._handleOverlayClick);\n    }\n\n    /**\n     * Hide the backdrop\n     *\n     * @private\n     */\n    private _hideOverlay(): void\n    {\n        if ( !this._overlay )\n        {\n            return;\n        }\n\n        // Create the leave animation and attach it to the player\n        this._player = this._animationBuilder.build([\n            animate('300ms cubic-bezier(0.25, 0.8, 0.25, 1)', style({opacity: 0})),\n        ]).create(this._overlay);\n\n        // Play the animation\n        this._player.play();\n\n        // Once the animation is done...\n        this._player.onDone(() =>\n        {\n            // If the overlay still exists...\n            if ( this._overlay )\n            {\n                // Remove the event listener\n                this._overlay.removeEventListener('click', this._handleOverlayClick);\n\n                // Remove the overlay\n                this._overlay.parentNode.removeChild(this._overlay);\n                this._overlay = null;\n            }\n        });\n    }\n\n    /**\n     * Open/close the drawer\n     *\n     * @param open\n     * @private\n     */\n    private _toggleOpened(open: boolean): void\n    {\n        // Set the opened\n        this.opened = open;\n\n        // Enable the animations\n        this._enableAnimations();\n\n        // If the mode is 'over'\n        if ( this.mode === 'over' )\n        {\n            // If the drawer opens, show the overlay\n            if ( open )\n            {\n                this._showOverlay();\n            }\n            // Otherwise, close the overlay\n            else\n            {\n                this._hideOverlay();\n            }\n        }\n\n        // Execute the observable\n        this.openedChanged.next(open);\n    }\n}\n","<div class=\"fuse-drawer-content\">\n    <ng-content></ng-content>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}