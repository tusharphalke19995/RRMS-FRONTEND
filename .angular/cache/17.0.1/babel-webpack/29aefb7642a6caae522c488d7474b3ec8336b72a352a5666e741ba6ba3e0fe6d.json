{"ast":null,"code":"import { provideHttpClient, withInterceptors } from '@angular/common/http';\nimport { ENVIRONMENT_INITIALIZER, inject } from '@angular/core';\nimport { authInterceptor } from 'app/core/auth/auth.interceptor';\nimport { AuthService } from 'app/core/auth/auth.service';\nexport const provideAuth = () => {\n  return [provideHttpClient(withInterceptors([authInterceptor])), {\n    provide: ENVIRONMENT_INITIALIZER,\n    useValue: () => inject(AuthService),\n    multi: true\n  }];\n};","map":{"version":3,"names":["provideHttpClient","withInterceptors","ENVIRONMENT_INITIALIZER","inject","authInterceptor","AuthService","provideAuth","provide","useValue","multi"],"sources":["/Users/tusharphalke/Documents/Freelancing_Work/rrms_frontend/src/app/core/auth/auth.provider.ts"],"sourcesContent":["import { provideHttpClient, withInterceptors } from '@angular/common/http';\nimport { ENVIRONMENT_INITIALIZER, EnvironmentProviders, inject, Provider } from '@angular/core';\nimport { authInterceptor } from 'app/core/auth/auth.interceptor';\nimport { AuthService } from 'app/core/auth/auth.service';\n\nexport const provideAuth = (): Array<Provider | EnvironmentProviders> =>\n{\n    return [\n        provideHttpClient(withInterceptors([authInterceptor])),\n        {\n            provide : ENVIRONMENT_INITIALIZER,\n            useValue: () => inject(AuthService),\n            multi   : true,\n        },\n    ];\n};\n"],"mappings":"AAAA,SAASA,iBAAiB,EAAEC,gBAAgB,QAAQ,sBAAsB;AAC1E,SAASC,uBAAuB,EAAwBC,MAAM,QAAkB,eAAe;AAC/F,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,WAAW,QAAQ,4BAA4B;AAExD,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAA6C;EAEpE,OAAO,CACHN,iBAAiB,CAACC,gBAAgB,CAAC,CAACG,eAAe,CAAC,CAAC,CAAC,EACtD;IACIG,OAAO,EAAGL,uBAAuB;IACjCM,QAAQ,EAAEA,CAAA,KAAML,MAAM,CAACE,WAAW,CAAC;IACnCI,KAAK,EAAK;GACb,CACJ;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}