{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { inject } from '@angular/core';\nimport { ReplaySubject, tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class NavigationService {\n  constructor() {\n    this._httpClient = inject(HttpClient);\n    this._navigation = new ReplaySubject(1);\n  }\n  // -----------------------------------------------------------------------------------------------------\n  // @ Accessors\n  // -----------------------------------------------------------------------------------------------------\n  /**\n   * Getter for navigation\n   */\n  get navigation$() {\n    return this._navigation.asObservable();\n  }\n  // -----------------------------------------------------------------------------------------------------\n  // @ Public methods\n  // -----------------------------------------------------------------------------------------------------\n  /**\n   * Get all navigation data\n   */\n  get() {\n    return this._httpClient.get('api/common/navigation').pipe(tap(navigation => {\n      this._navigation.next(navigation);\n    }));\n  }\n  static #_ = this.ɵfac = function NavigationService_Factory(t) {\n    return new (t || NavigationService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: NavigationService,\n    factory: NavigationService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpClient","inject","ReplaySubject","tap","NavigationService","constructor","_httpClient","_navigation","navigation$","asObservable","get","pipe","navigation","next","_","_2","factory","ɵfac","providedIn"],"sources":["/Users/tusharphalke/Documents/Freelancing_Work/rrms_frontend/src/app/core/navigation/navigation.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { Navigation } from 'app/core/navigation/navigation.types';\nimport { Observable, ReplaySubject, tap } from 'rxjs';\n\n@Injectable({providedIn: 'root'})\nexport class NavigationService\n{\n    private _httpClient = inject(HttpClient);\n    private _navigation: ReplaySubject<Navigation> = new ReplaySubject<Navigation>(1);\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Accessors\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Getter for navigation\n     */\n    get navigation$(): Observable<Navigation>\n    {\n        return this._navigation.asObservable();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Get all navigation data\n     */\n    get(): Observable<Navigation>\n    {\n        return this._httpClient.get<Navigation>('api/common/navigation').pipe(\n            tap((navigation) =>\n            {\n                this._navigation.next(navigation);\n            }),\n        );\n    }\n}\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,sBAAsB;AACjD,SAASC,MAAM,QAAoB,eAAe;AAElD,SAAqBC,aAAa,EAAEC,GAAG,QAAQ,MAAM;;AAGrD,OAAM,MAAOC,iBAAiB;EAD9BC,YAAA;IAGY,KAAAC,WAAW,GAAGL,MAAM,CAACD,UAAU,CAAC;IAChC,KAAAO,WAAW,GAA8B,IAAIL,aAAa,CAAa,CAAC,CAAC;;EAEjF;EACA;EACA;EAEA;;;EAGA,IAAIM,WAAWA,CAAA;IAEX,OAAO,IAAI,CAACD,WAAW,CAACE,YAAY,EAAE;EAC1C;EAEA;EACA;EACA;EAEA;;;EAGAC,GAAGA,CAAA;IAEC,OAAO,IAAI,CAACJ,WAAW,CAACI,GAAG,CAAa,uBAAuB,CAAC,CAACC,IAAI,CACjER,GAAG,CAAES,UAAU,IAAI;MAEf,IAAI,CAACL,WAAW,CAACM,IAAI,CAACD,UAAU,CAAC;IACrC,CAAC,CAAC,CACL;EACL;EAAC,QAAAE,CAAA,G;qBAhCQV,iBAAiB;EAAA;EAAA,QAAAW,EAAA,G;WAAjBX,iBAAiB;IAAAY,OAAA,EAAjBZ,iBAAiB,CAAAa,IAAA;IAAAC,UAAA,EADL;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}