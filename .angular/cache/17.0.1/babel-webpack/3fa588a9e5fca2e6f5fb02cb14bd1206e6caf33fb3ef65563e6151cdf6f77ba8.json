{"ast":null,"code":"import { DOCUMENT, NgIf } from '@angular/common';\nimport { NavigationEnd } from '@angular/router';\nimport { FUSE_VERSION } from '@fuse/version';\nimport { combineLatest, filter, map, Subject, takeUntil } from 'rxjs';\nimport { SettingsComponent } from './common/settings/settings.component';\nimport { EmptyLayoutComponent } from './layouts/empty/empty.component';\nimport { CenteredLayoutComponent } from './layouts/horizontal/centered/centered.component';\nimport { EnterpriseLayoutComponent } from './layouts/horizontal/enterprise/enterprise.component';\nimport { MaterialLayoutComponent } from './layouts/horizontal/material/material.component';\nimport { ModernLayoutComponent } from './layouts/horizontal/modern/modern.component';\nimport { ClassicLayoutComponent } from './layouts/vertical/classic/classic.component';\nimport { ClassyLayoutComponent } from './layouts/vertical/classy/classy.component';\nimport { CompactLayoutComponent } from './layouts/vertical/compact/compact.component';\nimport { DenseLayoutComponent } from './layouts/vertical/dense/dense.component';\nimport { FuturisticLayoutComponent } from './layouts/vertical/futuristic/futuristic.component';\nimport { ThinLayoutComponent } from './layouts/vertical/thin/thin.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@fuse/services/config\";\nimport * as i3 from \"@fuse/services/media-watcher\";\nimport * as i4 from \"@fuse/services/platform\";\nfunction LayoutComponent_empty_layout_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"empty-layout\");\n  }\n}\nfunction LayoutComponent_centered_layout_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"centered-layout\");\n  }\n}\nfunction LayoutComponent_enterprise_layout_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"enterprise-layout\");\n  }\n}\nfunction LayoutComponent_material_layout_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"material-layout\");\n  }\n}\nfunction LayoutComponent_modern_layout_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"modern-layout\");\n  }\n}\nfunction LayoutComponent_classic_layout_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"classic-layout\");\n  }\n}\nfunction LayoutComponent_classy_layout_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"classy-layout\");\n  }\n}\nfunction LayoutComponent_compact_layout_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"compact-layout\");\n  }\n}\nfunction LayoutComponent_dense_layout_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"dense-layout\");\n  }\n}\nfunction LayoutComponent_futuristic_layout_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"futuristic-layout\");\n  }\n}\nfunction LayoutComponent_thin_layout_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"thin-layout\");\n  }\n}\nexport class LayoutComponent {\n  /**\n   * Constructor\n   */\n  constructor(_activatedRoute, _document, _renderer2, _router, _fuseConfigService, _fuseMediaWatcherService, _fusePlatformService) {\n    this._activatedRoute = _activatedRoute;\n    this._document = _document;\n    this._renderer2 = _renderer2;\n    this._router = _router;\n    this._fuseConfigService = _fuseConfigService;\n    this._fuseMediaWatcherService = _fuseMediaWatcherService;\n    this._fusePlatformService = _fusePlatformService;\n    this._unsubscribeAll = new Subject();\n  }\n  // -----------------------------------------------------------------------------------------------------\n  // @ Lifecycle hooks\n  // -----------------------------------------------------------------------------------------------------\n  /**\n   * On init\n   */\n  ngOnInit() {\n    // Set the theme and scheme based on the configuration\n    combineLatest([this._fuseConfigService.config$, this._fuseMediaWatcherService.onMediaQueryChange$(['(prefers-color-scheme: dark)', '(prefers-color-scheme: light)'])]).pipe(takeUntil(this._unsubscribeAll), map(([config, mql]) => {\n      const options = {\n        scheme: config.scheme,\n        theme: config.theme\n      };\n      // If the scheme is set to 'auto'...\n      if (config.scheme === 'auto') {\n        // Decide the scheme using the media query\n        options.scheme = mql.breakpoints['(prefers-color-scheme: dark)'] ? 'dark' : 'light';\n      }\n      return options;\n    })).subscribe(options => {\n      // Store the options\n      this.scheme = options.scheme;\n      this.theme = options.theme;\n      // Update the scheme and theme\n      this._updateScheme();\n      this._updateTheme();\n    });\n    // Subscribe to config changes\n    this._fuseConfigService.config$.pipe(takeUntil(this._unsubscribeAll)).subscribe(config => {\n      // Store the config\n      this.config = config;\n      // Update the layout\n      this._updateLayout();\n    });\n    // Subscribe to NavigationEnd event\n    this._router.events.pipe(filter(event => event instanceof NavigationEnd), takeUntil(this._unsubscribeAll)).subscribe(() => {\n      // Update the layout\n      this._updateLayout();\n    });\n    // Set the app version\n    this._renderer2.setAttribute(this._document.querySelector('[ng-version]'), 'fuse-version', FUSE_VERSION);\n    // Set the OS name\n    this._renderer2.addClass(this._document.body, this._fusePlatformService.osName);\n  }\n  /**\n   * On destroy\n   */\n  ngOnDestroy() {\n    // Unsubscribe from all subscriptions\n    this._unsubscribeAll.next(null);\n    this._unsubscribeAll.complete();\n  }\n  // -----------------------------------------------------------------------------------------------------\n  // @ Private methods\n  // -----------------------------------------------------------------------------------------------------\n  /**\n   * Update the selected layout\n   */\n  _updateLayout() {\n    // Get the current activated route\n    let route = this._activatedRoute;\n    while (route.firstChild) {\n      route = route.firstChild;\n    }\n    // 1. Set the layout from the config\n    this.layout = this.config.layout;\n    // 2. Get the query parameter from the current route and\n    // set the layout and save the layout to the config\n    const layoutFromQueryParam = route.snapshot.queryParamMap.get('layout');\n    if (layoutFromQueryParam) {\n      this.layout = layoutFromQueryParam;\n      if (this.config) {\n        this.config.layout = layoutFromQueryParam;\n      }\n    }\n    // 3. Iterate through the paths and change the layout as we find\n    // a config for it.\n    //\n    // The reason we do this is that there might be empty grouping\n    // paths or componentless routes along the path. Because of that,\n    // we cannot just assume that the layout configuration will be\n    // in the last path's config or in the first path's config.\n    //\n    // So, we get all the paths that matched starting from root all\n    // the way to the current activated route, walk through them one\n    // by one and change the layout as we find the layout config. This\n    // way, layout configuration can live anywhere within the path and\n    // we won't miss it.\n    //\n    // Also, this will allow overriding the layout in any time so we\n    // can have different layouts for different routes.\n    const paths = route.pathFromRoot;\n    paths.forEach(path => {\n      // Check if there is a 'layout' data\n      if (path.routeConfig && path.routeConfig.data && path.routeConfig.data.layout) {\n        // Set the layout\n        this.layout = path.routeConfig.data.layout;\n      }\n    });\n  }\n  /**\n   * Update the selected scheme\n   *\n   * @private\n   */\n  _updateScheme() {\n    // Remove class names for all schemes\n    this._document.body.classList.remove('light', 'dark');\n    // Add class name for the currently selected scheme\n    this._document.body.classList.add(this.scheme);\n  }\n  /**\n   * Update the selected theme\n   *\n   * @private\n   */\n  _updateTheme() {\n    // Find the class name for the previously selected theme and remove it\n    this._document.body.classList.forEach(className => {\n      if (className.startsWith('theme-')) {\n        this._document.body.classList.remove(className, className.split('-')[1]);\n      }\n    });\n    // Add class name for the currently selected theme\n    this._document.body.classList.add(this.theme);\n  }\n  static #_ = this.ɵfac = function LayoutComponent_Factory(t) {\n    return new (t || LayoutComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.FuseConfigService), i0.ɵɵdirectiveInject(i3.FuseMediaWatcherService), i0.ɵɵdirectiveInject(i4.FusePlatformService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LayoutComponent,\n    selectors: [[\"layout\"]],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 12,\n    vars: 11,\n    consts: [[4, \"ngIf\"]],\n    template: function LayoutComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, LayoutComponent_empty_layout_0_Template, 1, 0, \"empty-layout\", 0)(1, LayoutComponent_centered_layout_1_Template, 1, 0, \"centered-layout\", 0)(2, LayoutComponent_enterprise_layout_2_Template, 1, 0, \"enterprise-layout\", 0)(3, LayoutComponent_material_layout_3_Template, 1, 0, \"material-layout\", 0)(4, LayoutComponent_modern_layout_4_Template, 1, 0, \"modern-layout\", 0)(5, LayoutComponent_classic_layout_5_Template, 1, 0, \"classic-layout\", 0)(6, LayoutComponent_classy_layout_6_Template, 1, 0, \"classy-layout\", 0)(7, LayoutComponent_compact_layout_7_Template, 1, 0, \"compact-layout\", 0)(8, LayoutComponent_dense_layout_8_Template, 1, 0, \"dense-layout\", 0)(9, LayoutComponent_futuristic_layout_9_Template, 1, 0, \"futuristic-layout\", 0)(10, LayoutComponent_thin_layout_10_Template, 1, 0, \"thin-layout\", 0);\n        i0.ɵɵelement(11, \"settings\");\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.layout === \"empty\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.layout === \"centered\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.layout === \"enterprise\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.layout === \"material\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.layout === \"modern\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.layout === \"classic\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.layout === \"classy\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.layout === \"compact\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.layout === \"dense\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.layout === \"futuristic\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.layout === \"thin\");\n      }\n    },\n    dependencies: [NgIf, EmptyLayoutComponent, CenteredLayoutComponent, EnterpriseLayoutComponent, MaterialLayoutComponent, ModernLayoutComponent, ClassicLayoutComponent, ClassyLayoutComponent, CompactLayoutComponent, DenseLayoutComponent, FuturisticLayoutComponent, ThinLayoutComponent, SettingsComponent],\n    styles: [\"layout {\\n  display: flex;\\n  flex: 1 1 auto;\\n  width: 100%;\\n  max-width: 100%;\\n  min-width: 0;\\n  /* Base styles for individual layouts */\\n  /* Base styles for components that load as a route */\\n}\\nlayout > * {\\n  position: relative;\\n  display: flex;\\n  flex: 1 1 auto;\\n  width: 100%;\\n}\\nlayout router-outlet + * {\\n  position: relative;\\n  display: flex;\\n  flex: 1 1 auto;\\n  width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbGF5b3V0L2xheW91dC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGFBQUE7RUFDQSxjQUFBO0VBQ0EsV0FBQTtFQUNBLGVBQUE7RUFDQSxZQUFBO0VBRUEsdUNBQUE7RUFRQSxvREFBQTtBQVBKO0FBQUk7RUFDSSxrQkFBQTtFQUNBLGFBQUE7RUFDQSxjQUFBO0VBQ0EsV0FBQTtBQUVSO0FBSVE7RUFDSSxrQkFBQTtFQUNBLGFBQUE7RUFDQSxjQUFBO0VBQ0EsV0FBQTtBQUZaIiwic291cmNlc0NvbnRlbnQiOlsibGF5b3V0IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXg6IDEgMSBhdXRvO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1heC13aWR0aDogMTAwJTtcbiAgICBtaW4td2lkdGg6IDA7XG5cbiAgICAvKiBCYXNlIHN0eWxlcyBmb3IgaW5kaXZpZHVhbCBsYXlvdXRzICovXG4gICAgPiAqIHtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBmbGV4OiAxIDEgYXV0bztcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgfVxuXG4gICAgLyogQmFzZSBzdHlsZXMgZm9yIGNvbXBvbmVudHMgdGhhdCBsb2FkIGFzIGEgcm91dGUgKi9cbiAgICByb3V0ZXItb3V0bGV0IHtcblxuICAgICAgICArICoge1xuICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgIGZsZXg6IDEgMSBhdXRvO1xuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIH1cbiAgICB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"],\n    encapsulation: 2\n  });\n}","map":{"version":3,"names":["DOCUMENT","NgIf","NavigationEnd","FUSE_VERSION","combineLatest","filter","map","Subject","takeUntil","SettingsComponent","EmptyLayoutComponent","CenteredLayoutComponent","EnterpriseLayoutComponent","MaterialLayoutComponent","ModernLayoutComponent","ClassicLayoutComponent","ClassyLayoutComponent","CompactLayoutComponent","DenseLayoutComponent","FuturisticLayoutComponent","ThinLayoutComponent","i0","ɵɵelement","LayoutComponent","constructor","_activatedRoute","_document","_renderer2","_router","_fuseConfigService","_fuseMediaWatcherService","_fusePlatformService","_unsubscribeAll","ngOnInit","config$","onMediaQueryChange$","pipe","config","mql","options","scheme","theme","breakpoints","subscribe","_updateScheme","_updateTheme","_updateLayout","events","event","setAttribute","querySelector","addClass","body","osName","ngOnDestroy","next","complete","route","firstChild","layout","layoutFromQueryParam","snapshot","queryParamMap","get","paths","pathFromRoot","forEach","path","routeConfig","data","classList","remove","add","className","startsWith","split","_","ɵɵdirectiveInject","i1","ActivatedRoute","Renderer2","Router","i2","FuseConfigService","i3","FuseMediaWatcherService","i4","FusePlatformService","_2","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","LayoutComponent_Template","rf","ctx","ɵɵtemplate","LayoutComponent_empty_layout_0_Template","LayoutComponent_centered_layout_1_Template","LayoutComponent_enterprise_layout_2_Template","LayoutComponent_material_layout_3_Template","LayoutComponent_modern_layout_4_Template","LayoutComponent_classic_layout_5_Template","LayoutComponent_classy_layout_6_Template","LayoutComponent_compact_layout_7_Template","LayoutComponent_dense_layout_8_Template","LayoutComponent_futuristic_layout_9_Template","LayoutComponent_thin_layout_10_Template","ɵɵproperty","ɵɵadvance","styles","encapsulation"],"sources":["/Users/tusharphalke/Documents/Freelancing_Work/rrms_frontend/src/app/layout/layout.component.ts","/Users/tusharphalke/Documents/Freelancing_Work/rrms_frontend/src/app/layout/layout.component.html"],"sourcesContent":["import { DOCUMENT, NgIf } from '@angular/common';\nimport { Component, Inject, OnDestroy, OnInit, Renderer2, ViewEncapsulation } from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { FuseConfig, FuseConfigService } from '@fuse/services/config';\nimport { FuseMediaWatcherService } from '@fuse/services/media-watcher';\nimport { FusePlatformService } from '@fuse/services/platform';\nimport { FUSE_VERSION } from '@fuse/version';\nimport { combineLatest, filter, map, Subject, takeUntil } from 'rxjs';\nimport { SettingsComponent } from './common/settings/settings.component';\nimport { EmptyLayoutComponent } from './layouts/empty/empty.component';\nimport { CenteredLayoutComponent } from './layouts/horizontal/centered/centered.component';\nimport { EnterpriseLayoutComponent } from './layouts/horizontal/enterprise/enterprise.component';\nimport { MaterialLayoutComponent } from './layouts/horizontal/material/material.component';\nimport { ModernLayoutComponent } from './layouts/horizontal/modern/modern.component';\nimport { ClassicLayoutComponent } from './layouts/vertical/classic/classic.component';\nimport { ClassyLayoutComponent } from './layouts/vertical/classy/classy.component';\nimport { CompactLayoutComponent } from './layouts/vertical/compact/compact.component';\nimport { DenseLayoutComponent } from './layouts/vertical/dense/dense.component';\nimport { FuturisticLayoutComponent } from './layouts/vertical/futuristic/futuristic.component';\nimport { ThinLayoutComponent } from './layouts/vertical/thin/thin.component';\n\n@Component({\n    selector     : 'layout',\n    templateUrl  : './layout.component.html',\n    styleUrls    : ['./layout.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    standalone   : true,\n    imports      : [NgIf, EmptyLayoutComponent, CenteredLayoutComponent, EnterpriseLayoutComponent, MaterialLayoutComponent, ModernLayoutComponent, ClassicLayoutComponent, ClassyLayoutComponent, CompactLayoutComponent, DenseLayoutComponent, FuturisticLayoutComponent, ThinLayoutComponent, SettingsComponent],\n})\nexport class LayoutComponent implements OnInit, OnDestroy\n{\n    config: FuseConfig;\n    layout: string;\n    scheme: 'dark' | 'light';\n    theme: string;\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private _activatedRoute: ActivatedRoute,\n        @Inject(DOCUMENT) private _document: any,\n        private _renderer2: Renderer2,\n        private _router: Router,\n        private _fuseConfigService: FuseConfigService,\n        private _fuseMediaWatcherService: FuseMediaWatcherService,\n        private _fusePlatformService: FusePlatformService,\n    )\n    {\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        // Set the theme and scheme based on the configuration\n        combineLatest([\n            this._fuseConfigService.config$,\n            this._fuseMediaWatcherService.onMediaQueryChange$(['(prefers-color-scheme: dark)', '(prefers-color-scheme: light)']),\n        ]).pipe(\n            takeUntil(this._unsubscribeAll),\n            map(([config, mql]) =>\n            {\n                const options = {\n                    scheme: config.scheme,\n                    theme : config.theme,\n                };\n\n                // If the scheme is set to 'auto'...\n                if ( config.scheme === 'auto' )\n                {\n                    // Decide the scheme using the media query\n                    options.scheme = mql.breakpoints['(prefers-color-scheme: dark)'] ? 'dark' : 'light';\n                }\n\n                return options;\n            }),\n        ).subscribe((options) =>\n        {\n            // Store the options\n            this.scheme = options.scheme;\n            this.theme = options.theme;\n\n            // Update the scheme and theme\n            this._updateScheme();\n            this._updateTheme();\n        });\n\n        // Subscribe to config changes\n        this._fuseConfigService.config$\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe((config: FuseConfig) =>\n            {\n                // Store the config\n                this.config = config;\n\n                // Update the layout\n                this._updateLayout();\n            });\n\n        // Subscribe to NavigationEnd event\n        this._router.events.pipe(\n            filter(event => event instanceof NavigationEnd),\n            takeUntil(this._unsubscribeAll),\n        ).subscribe(() =>\n        {\n            // Update the layout\n            this._updateLayout();\n        });\n\n        // Set the app version\n        this._renderer2.setAttribute(this._document.querySelector('[ng-version]'), 'fuse-version', FUSE_VERSION);\n\n        // Set the OS name\n        this._renderer2.addClass(this._document.body, this._fusePlatformService.osName);\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next(null);\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Private methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Update the selected layout\n     */\n    private _updateLayout(): void\n    {\n        // Get the current activated route\n        let route = this._activatedRoute;\n        while ( route.firstChild )\n        {\n            route = route.firstChild;\n        }\n\n        // 1. Set the layout from the config\n        this.layout = this.config.layout;\n\n        // 2. Get the query parameter from the current route and\n        // set the layout and save the layout to the config\n        const layoutFromQueryParam = route.snapshot.queryParamMap.get('layout');\n        if ( layoutFromQueryParam )\n        {\n            this.layout = layoutFromQueryParam;\n            if ( this.config )\n            {\n                this.config.layout = layoutFromQueryParam;\n            }\n        }\n\n        // 3. Iterate through the paths and change the layout as we find\n        // a config for it.\n        //\n        // The reason we do this is that there might be empty grouping\n        // paths or componentless routes along the path. Because of that,\n        // we cannot just assume that the layout configuration will be\n        // in the last path's config or in the first path's config.\n        //\n        // So, we get all the paths that matched starting from root all\n        // the way to the current activated route, walk through them one\n        // by one and change the layout as we find the layout config. This\n        // way, layout configuration can live anywhere within the path and\n        // we won't miss it.\n        //\n        // Also, this will allow overriding the layout in any time so we\n        // can have different layouts for different routes.\n        const paths = route.pathFromRoot;\n        paths.forEach((path) =>\n        {\n            // Check if there is a 'layout' data\n            if ( path.routeConfig && path.routeConfig.data && path.routeConfig.data.layout )\n            {\n                // Set the layout\n                this.layout = path.routeConfig.data.layout;\n            }\n        });\n    }\n\n    /**\n     * Update the selected scheme\n     *\n     * @private\n     */\n    private _updateScheme(): void\n    {\n        // Remove class names for all schemes\n        this._document.body.classList.remove('light', 'dark');\n\n        // Add class name for the currently selected scheme\n        this._document.body.classList.add(this.scheme);\n    }\n\n    /**\n     * Update the selected theme\n     *\n     * @private\n     */\n    private _updateTheme(): void\n    {\n        // Find the class name for the previously selected theme and remove it\n        this._document.body.classList.forEach((className: string) =>\n        {\n            if ( className.startsWith('theme-') )\n            {\n                this._document.body.classList.remove(className, className.split('-')[1]);\n            }\n        });\n\n        // Add class name for the currently selected theme\n        this._document.body.classList.add(this.theme);\n    }\n}\n","<!-- ----------------------------------------------------------------------------------------------------- -->\n<!-- Empty layout -->\n<!-- ----------------------------------------------------------------------------------------------------- -->\n<empty-layout *ngIf=\"layout === 'empty'\"></empty-layout>\n\n<!-- ----------------------------------------------------------------------------------------------------- -->\n<!-- Layouts with horizontal navigation -->\n<!-- ----------------------------------------------------------------------------------------------------- -->\n\n<!-- Centered -->\n<centered-layout *ngIf=\"layout === 'centered'\"></centered-layout>\n\n<!-- Enterprise -->\n<enterprise-layout *ngIf=\"layout === 'enterprise'\"></enterprise-layout>\n\n<!-- Material -->\n<material-layout *ngIf=\"layout === 'material'\"></material-layout>\n\n<!-- Modern -->\n<modern-layout *ngIf=\"layout === 'modern'\"></modern-layout>\n\n<!-- ----------------------------------------------------------------------------------------------------- -->\n<!-- Layouts with vertical navigation -->\n<!-- ----------------------------------------------------------------------------------------------------- -->\n\n<!-- Classic -->\n<classic-layout *ngIf=\"layout === 'classic'\"></classic-layout>\n\n<!-- Classy -->\n<classy-layout *ngIf=\"layout === 'classy'\"></classy-layout>\n\n<!-- Compact -->\n<compact-layout *ngIf=\"layout === 'compact'\"></compact-layout>\n\n<!-- Dense -->\n<dense-layout *ngIf=\"layout === 'dense'\"></dense-layout>\n\n<!-- Futuristic -->\n<futuristic-layout *ngIf=\"layout === 'futuristic'\"></futuristic-layout>\n\n<!-- Thin -->\n<thin-layout *ngIf=\"layout === 'thin'\"></thin-layout>\n\n<!-- ----------------------------------------------------------------------------------------------------- -->\n<!-- Settings drawer - Remove this to remove the drawer and its button -->\n<!-- ----------------------------------------------------------------------------------------------------- -->\n<settings></settings>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}