{"ast":null,"code":"export class FuseMockApiUtils {\n  /**\n   * Constructor\n   */\n  constructor() {}\n  // -----------------------------------------------------------------------------------------------------\n  // @ Public methods\n  // -----------------------------------------------------------------------------------------------------\n  /**\n   * Generate a globally unique id\n   */\n  static guid() {\n    /* eslint-disable */\n    let d = new Date().getTime();\n    // Use high-precision timer if available\n    if (typeof performance !== 'undefined' && typeof performance.now === 'function') {\n      d += performance.now();\n    }\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n      const r = (d + Math.random() * 16) % 16 | 0;\n      d = Math.floor(d / 16);\n      return (c === 'x' ? r : r & 0x3 | 0x8).toString(16);\n    });\n    /* eslint-enable */\n  }\n}","map":{"version":3,"names":["FuseMockApiUtils","constructor","guid","d","Date","getTime","performance","now","replace","c","r","Math","random","floor","toString"],"sources":["/Users/tusharphalke/Documents/Freelancing_Work/rrms_frontend/src/@fuse/lib/mock-api/mock-api.utils.ts"],"sourcesContent":["export class FuseMockApiUtils\n{\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Generate a globally unique id\n     */\n    static guid(): string\n    {\n        /* eslint-disable */\n\n        let d = new Date().getTime();\n\n        // Use high-precision timer if available\n        if ( typeof performance !== 'undefined' && typeof performance.now === 'function' )\n        {\n            d += performance.now();\n        }\n\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) =>\n        {\n            const r = (d + Math.random() * 16) % 16 | 0;\n            d = Math.floor(d / 16);\n            return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n        });\n\n        /* eslint-enable */\n    }\n}\n"],"mappings":"AAAA,OAAM,MAAOA,gBAAgB;EAEzB;;;EAGAC,YAAA,GAEA;EAEA;EACA;EACA;EAEA;;;EAGA,OAAOC,IAAIA,CAAA;IAEP;IAEA,IAAIC,CAAC,GAAG,IAAIC,IAAI,EAAE,CAACC,OAAO,EAAE;IAE5B;IACA,IAAK,OAAOC,WAAW,KAAK,WAAW,IAAI,OAAOA,WAAW,CAACC,GAAG,KAAK,UAAU,EAChF;MACIJ,CAAC,IAAIG,WAAW,CAACC,GAAG,EAAE;;IAG1B,OAAO,sCAAsC,CAACC,OAAO,CAAC,OAAO,EAAGC,CAAC,IAAI;MAEjE,MAAMC,CAAC,GAAG,CAACP,CAAC,GAAGQ,IAAI,CAACC,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,CAAC;MAC3CT,CAAC,GAAGQ,IAAI,CAACE,KAAK,CAACV,CAAC,GAAG,EAAE,CAAC;MACtB,OAAO,CAACM,CAAC,KAAK,GAAG,GAAGC,CAAC,GAAIA,CAAC,GAAG,GAAG,GAAG,GAAI,EAAEI,QAAQ,CAAC,EAAE,CAAC;IACzD,CAAC,CAAC;IAEF;EACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}