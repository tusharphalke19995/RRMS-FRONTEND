{"ast":null,"code":"import { BehaviorSubject, tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DashbaordService {\n  /**\n   * Constructor\n   */\n  constructor(_httpClient) {\n    this._httpClient = _httpClient;\n    this._data = new BehaviorSubject(null);\n  }\n  // -----------------------------------------------------------------------------------------------------\n  // @ Accessors\n  // -----------------------------------------------------------------------------------------------------\n  /**\n   * Getter for data\n   */\n  get data$() {\n    return this._data.asObservable();\n  }\n  // -----------------------------------------------------------------------------------------------------\n  // @ Public methods\n  // -----------------------------------------------------------------------------------------------------\n  /**\n   * Get data\n   */\n  getData() {\n    return this._httpClient.get('api/dashboards/project').pipe(tap(response => {\n      this._data.next(response);\n    }));\n  }\n  static #_ = this.ɵfac = function DashbaordService_Factory(t) {\n    return new (t || DashbaordService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DashbaordService,\n    factory: DashbaordService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["BehaviorSubject","tap","DashbaordService","constructor","_httpClient","_data","data$","asObservable","getData","get","pipe","response","next","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/Users/tusharphalke/Documents/Freelancing_Work/rrms_frontend/src/app/modules/admin/dashbaord/dashboard.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, tap } from 'rxjs';\n\n@Injectable({providedIn: 'root'})\nexport class DashbaordService\n{\n    private _data: BehaviorSubject<any> = new BehaviorSubject(null);\n\n    /**\n     * Constructor\n     */\n    constructor(private _httpClient: HttpClient)\n    {\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Accessors\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Getter for data\n     */\n    get data$(): Observable<any>\n    {\n        return this._data.asObservable();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Get data\n     */\n    getData(): Observable<any>\n    {\n        return this._httpClient.get('api/dashboards/project').pipe(\n            tap((response: any) =>\n            {\n                this._data.next(response);\n            }),\n        );\n    }\n}\n"],"mappings":"AAEA,SAASA,eAAe,EAAcC,GAAG,QAAQ,MAAM;;;AAGvD,OAAM,MAAOC,gBAAgB;EAIzB;;;EAGAC,YAAoBC,WAAuB;IAAvB,KAAAA,WAAW,GAAXA,WAAW;IALvB,KAAAC,KAAK,GAAyB,IAAIL,eAAe,CAAC,IAAI,CAAC;EAO/D;EAEA;EACA;EACA;EAEA;;;EAGA,IAAIM,KAAKA,CAAA;IAEL,OAAO,IAAI,CAACD,KAAK,CAACE,YAAY,EAAE;EACpC;EAEA;EACA;EACA;EAEA;;;EAGAC,OAAOA,CAAA;IAEH,OAAO,IAAI,CAACJ,WAAW,CAACK,GAAG,CAAC,wBAAwB,CAAC,CAACC,IAAI,CACtDT,GAAG,CAAEU,QAAa,IAAI;MAElB,IAAI,CAACN,KAAK,CAACO,IAAI,CAACD,QAAQ,CAAC;IAC7B,CAAC,CAAC,CACL;EACL;EAAC,QAAAE,CAAA,G;qBAtCQX,gBAAgB,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAhBhB,gBAAgB;IAAAiB,OAAA,EAAhBjB,gBAAgB,CAAAkB,IAAA;IAAAC,UAAA,EADJ;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}